<Window
	x:Class="ElectronicObserver.FormMainWpf"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
	xmlns:common="clr-namespace:ElectronicObserver.Common"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:local="clr-namespace:ElectronicObserver"
	xmlns:markup="clr-namespace:WpfExtensions.Xaml.Markup;assembly=WpfExtensions.Xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
	xmlns:reskeys="clr-namespace:AvalonDock.Themes.VS2013.Themes;assembly=AvalonDock.Themes.VS2013"
	xmlns:resource="clr-namespace:ElectronicObserver.Resource"
	xmlns:system="clr-namespace:System;assembly=System.Runtime"
	xmlns:ui="http://schemas.modernwpf.com/2019"
	xmlns:viewModels="clr-namespace:ElectronicObserver.ViewModels"
	x:Name="FormMainWpfControl"
	Title="{Binding FormMain.Title}"
	d:Height="450"
	d:Title="Electronic Observer"
	d:Width="800"
	ui:WindowHelper.UseModernWindowStyle="True"
	DataContext="{Binding ViewModel, ElementName=FormMainWpfControl}"
	TextElement.FontFamily="{Binding Font}"
	TextElement.FontSize="{Binding FontSize}"
	TextElement.Foreground="{Binding FontBrush}"
	Topmost="{Binding Topmost}"
	mc:Ignorable="d"
	>
	<!--
		copied from: https://github.com/Kinnara/ModernWpf/blob/master/ModernWpf/Styles/Window.xaml#L27
		removed GlassFrameThickness because it breaks winforms host content
	-->
	<WindowChrome.WindowChrome>
		<WindowChrome
			CaptionHeight="{DynamicResource {x:Static ui:TitleBar.HeightKey}}"
			CornerRadius="0"
			UseAeroCaptionButtons="False"
			/>
	</WindowChrome.WindowChrome>

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Window/Wpf/ViewTemplates.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<viewModels:MainWindowBindingProxy x:Key="Proxy" DataContext="{Binding}" />

			<Style x:Key="AvalonDockThemeVs2013ButtonStyle" TargetType="Button">
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Button">
							<Border
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								>
								<ContentPresenter />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style BasedOn="{StaticResource DefaultToolTipStyleEO}" TargetType="ToolTip">
				<Setter Property="FontFamily" Value="{Binding DataContext.Font, Source={StaticResource Proxy}}" />
				<Setter Property="FontSize" Value="{Binding DataContext.FontSize, Source={StaticResource Proxy}}" />
				<Setter Property="Foreground" Value="{Binding DataContext.FontBrush, Source={StaticResource Proxy}}" />
			</Style>
			<Style BasedOn="{StaticResource DefaultMenuItemStyle}" TargetType="MenuItem">
				<Setter Property="FontFamily" Value="{Binding DataContext.Font, Source={StaticResource Proxy}}" />
				<Setter Property="FontSize" Value="{Binding DataContext.FontSize, Source={StaticResource Proxy}}" />
				<Setter Property="Foreground" Value="{Binding DataContext.FontBrush, Source={StaticResource Proxy}}" />
				<!--
					copied from https://github.com/Kinnara/ModernWpf/blob/master/ModernWpf/Styles/MenuItem.xaml#L415
					change is the foreground on the last trigger
				-->
				<Style.Triggers>
					<Trigger Property="Role" Value="TopLevelHeader">
						<Setter Property="Background" Value="{DynamicResource MenuBarItemBackground}" />
						<Setter Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrush}" />
						<Setter Property="BorderThickness" Value="{DynamicResource MenuBarItemBorderThickness}" />
						<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}" />
						<Setter Property="IsTabStop" Value="True" />
						<Setter Property="Height" Value="{StaticResource MenuBarHeight}" />
					</Trigger>
					<Trigger Property="Role" Value="TopLevelItem">
						<Setter Property="Background" Value="{DynamicResource MenuBarItemBackground}" />
						<Setter Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrush}" />
						<Setter Property="BorderThickness" Value="{DynamicResource MenuBarItemBorderThickness}" />
						<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}" />
						<Setter Property="IsTabStop" Value="True" />
						<Setter Property="Height" Value="{StaticResource MenuBarHeight}" />
					</Trigger>
					<Trigger Property="Role" Value="SubmenuHeader">
						<Setter Property="Background" Value="{DynamicResource MenuFlyoutSubItemRevealBackground}" />
						<Setter Property="BorderBrush" Value="{DynamicResource MenuFlyoutSubItemRevealBorderBrush}" />
						<Setter Property="BorderThickness" Value="{DynamicResource MenuFlyoutSubItemRevealBorderThickness}" />
						<Setter Property="Foreground" Value="{Binding DataContext.FontBrush, Source={StaticResource Proxy}}" />
						<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style BasedOn="{StaticResource DefaultStatusBarStyle}" TargetType="StatusBar">
				<Setter Property="FontFamily" Value="{Binding DataContext.Font, Source={StaticResource Proxy}}" />
				<Setter Property="FontSize" Value="{Binding DataContext.FontSize, Source={StaticResource Proxy}}" />
				<Setter Property="Foreground" Value="{Binding DataContext.FontBrush, Source={StaticResource Proxy}}" />
			</Style>

			<ControlTemplate x:Key="AutoHideButtonTemplate" d:DataContext="{d:DesignInstance LayoutAnchorable}">
				<Button
					x:Name="PART_AutoHidePin"
					Margin="2 0"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Command="{Binding DataContext.AutoHideCommand, ElementName=FormMainWpfControl}"
					CommandParameter="{Binding}"
					Focusable="False"
					Style="{StaticResource AvalonDockThemeVs2013ButtonStyle}"
					ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnAutoHide_Hint}"
					Visibility="{Binding DataContext.CanAutoHide, ElementName=FormMainWpfControl, Converter={BoolToVisibilityConverter}}"
					>
					<Path
						x:Name="PART_ImgAutoHidePin"
						Width="10"
						Height="13"
						Data="{DynamicResource PinAutoHide}"
						Fill="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonInactiveGlyph}}"
						Stretch="Uniform"
						/>
				</Button>

				<ControlTemplate.Triggers>
					<DataTrigger Binding="{Binding IsMouseOver, ElementName=PART_AutoHidePin}" Value="True">
						<Setter TargetName="PART_AutoHidePin" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBackground}}" />
						<Setter TargetName="PART_AutoHidePin" Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredBorder}}" />
						<Setter TargetName="PART_ImgAutoHidePin" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ToolWindowCaptionButtonActiveHoveredGlyph}}" />
					</DataTrigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</ResourceDictionary>
	</Window.Resources>

	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Closing">
			<i:InvokeCommandAction Command="{Binding ClosingCommand}" PassEventArgsToCommand="True" />
		</i:EventTrigger>
		<i:EventTrigger EventName="Closed">
			<i:InvokeCommandAction Command="{Binding ClosedCommand}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<Menu
			Grid.Row="0"
			Height="Auto"
			Margin="2"
			HorizontalAlignment="Stretch"
			>
			<Menu.ItemsPanel>
				<ItemsPanelTemplate>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
					</Grid>
				</ItemsPanelTemplate>
			</Menu.ItemsPanel>

			<MenuItem
				Grid.Column="0"
				Height="Auto"
				d:Header="File"
				Header="{Binding FormMain.StripMenu_File}"
				>
				<MenuItem d:Header="Record" Header="{Binding FormMain.StripMenu_File_Record}">
					<MenuItem
						d:Header="Save"
						Command="{Binding SaveDataCommand}"
						Header="{Binding FormMain.StripMenu_File_Record_Save}"
						/>
					<MenuItem
						d:Header="Load"
						Command="{Binding LoadDataCommand}"
						Header="{Binding FormMain.StripMenu_File_Record_Load}"
						/>
				</MenuItem>
				<MenuItem d:Header="Layout" Header="{Binding FormMain.StripMenu_File_Layout}">
					<MenuItem
						d:Header="Save"
						Command="{Binding SaveLayoutCommand}"
						CommandParameter="{Binding ElementName=FormMainWpfControl}"
						Header="{Binding FormMain.StripMenu_File_Layout_Save}"
						/>
					<MenuItem
						d:Header="Load"
						Command="{Binding LoadLayoutCommand}"
						CommandParameter="{Binding ElementName=FormMainWpfControl}"
						Header="{Binding FormMain.StripMenu_File_Layout_Load}"
						/>
					<MenuItem
						d:Header="Open"
						Command="{Binding OpenLayoutCommand}"
						Header="{Binding FormMain.StripMenu_File_Layout_Open}"
						/>
					<MenuItem
						d:Header="Save as"
						Command="{Binding SaveLayoutAsCommand}"
						Header="{Binding FormMain.StripMenu_File_Layout_Change}"
						/>
					<MenuItem
						d:Header="Reset floating windows"
						Command="{Binding ResetFloatingWindowsCommand}"
						Header="{Binding FormMain.ResetFloatingWindows}"
						/>
					<Separator />
					<MenuItem Header="{Binding FormMain.Adjustment}">
						<MenuItem
							Header="{Binding FormMain.StripMenu_File_Layout_LockLayout}"
							IsCheckable="True"
							IsChecked="{Binding LockLayout}"
							/>
						<StackPanel>
							<TextBlock Margin="0 2" Text="{Binding FormMain.GridSplitterSize}" />
							<ComboBox IsEnabled="{Binding CanChangeGridSplitterSize}" SelectedValue="{Binding GridSplitterSize}">
								<system:Int32>0</system:Int32>
								<system:Int32>1</system:Int32>
								<system:Int32>2</system:Int32>
								<system:Int32>3</system:Int32>
								<system:Int32>4</system:Int32>
								<system:Int32>5</system:Int32>
								<system:Int32>6</system:Int32>
								<system:Int32>7</system:Int32>
								<system:Int32>8</system:Int32>
								<system:Int32>9</system:Int32>
							</ComboBox>
						</StackPanel>
					</MenuItem>
					<Separator />
					<MenuItem
						d:Header="Always On Top (M)"
						Header="{Binding FormMain.StripMenu_File_Layout_TopMost}"
						IsCheckable="True"
						IsChecked="{Binding Topmost}"
						/>
				</MenuItem>
				<MenuItem d:Header="Notification" Header="{Binding FormMain.StripMenu_File_Notification}">
					<MenuItem
						d:Header="Disable"
						Command="{Binding SilenceNotificationsCommand}"
						Header="{Binding FormMain.StripMenu_File_Notification_MuteAll}"
						IsCheckable="True"
						IsChecked="{Binding NotificationsSilenced}"
						/>
				</MenuItem>
				<Separator />
				<MenuItem
					d:Header="Settings"
					Command="{Binding OpenConfigurationCommand}"
					Header="{Binding FormMain.StripMenu_File_Configuration}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormConfiguration" />
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
			<MenuItem
				Grid.Column="1"
				Height="Auto"
				d:Header="View"
				Header="{Binding FormMain.StripMenu_View}"
				>
				<MenuItem d:Header="Fleet" Header="{Binding FormMain.StripMenu_View_Fleet}">
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormFleet" />
					</MenuItem.Icon>
					<MenuItem
						d:Header="#1"
						Command="{Binding OpenViewCommand}"
						CommandParameter="{Binding Fleets[0]}"
						Header="{Binding FormMain.StripMenu_View_Fleet_1}"
						/>
					<MenuItem
						d:Header="#2"
						Command="{Binding OpenViewCommand}"
						CommandParameter="{Binding Fleets[1]}"
						Header="{Binding FormMain.StripMenu_View_Fleet_2}"
						/>
					<MenuItem
						d:Header="#3"
						Command="{Binding OpenViewCommand}"
						CommandParameter="{Binding Fleets[2]}"
						Header="{Binding FormMain.StripMenu_View_Fleet_3}"
						/>
					<MenuItem
						d:Header="#4"
						Command="{Binding OpenViewCommand}"
						CommandParameter="{Binding Fleets[3]}"
						Header="{Binding FormMain.StripMenu_View_Fleet_4}"
						/>
				</MenuItem>
				<MenuItem
					d:Header="Fleet List"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding FleetOverview}"
					Header="{Binding FormMain.StripMenu_View_FleetOverview}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormFleet" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Ship Group"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding ShipGroup}"
					Header="{Binding FormMain.StripMenu_View_ShipGroup}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormShipGroup" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Ship Group"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding ShipGroup}"
					Header="{Binding FormMain.StripMenu_View_ShipGroup}"
					Visibility="Collapsed"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormShipGroup" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Presets"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding FleetPreset}"
					Header="{Binding FormMain.StripMenu_View_FleetPreset}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormFleetPreset" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Ship training"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding ShipTrainingPlanViewer}"
					Header="{Binding FormMain.StripMenu_View_ShipTrainingPlanViewer}"
					>
					<MenuItem.Icon>
						<common:UseItemIcon Type="ActionReport" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem
					d:Header="Dock"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding Dock}"
					Header="{Binding FormMain.StripMenu_View_Dock}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormDock" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Arsenal"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding Arsenal}"
					Header="{Binding FormMain.StripMenu_View_Arsenal}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormArsenal" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding EquipmentUpgradePlanViewer}"
					Header="{Binding FormMain.EquipmentUpgradePlanViewerTitle}"
					>
					<MenuItem.Icon>
						<common:UseItemIcon Type="ImproveMaterial" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="AB"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding BaseAirCorps}"
					Header="{Binding FormMain.StripMenu_View_BaseAirCorps}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormBaseAirCorps" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem
					d:Header="HQ"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding Headquarters}"
					Header="{Binding FormMain.StripMenu_View_Headquarters}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormHeadQuarters" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Senka leaderboard"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding SenkaLeaderboardViewer}"
					Header="{Binding FormMain.SenkaLeaderboard}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormResourceChart" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Quest"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding Quest}"
					Header="{Binding FormMain.StripMenu_View_Quest}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormQuest" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Expedition Check"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding ExpeditionCheck}"
					Header="{Binding FormMain.StripMenu_Tool_ExpeditionCheck}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormExpeditionCheck" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Information"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding FormInformation}"
					Header="{Binding FormMain.StripMenu_View_Information}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormInformation" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem
					d:Header="Compass"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding Compass}"
					Header="{Binding FormMain.StripMenu_View_Compass}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormCompass" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Battle"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding Battle}"
					Header="{Binding FormMain.StripMenu_View_Battle}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormBattle" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem
					d:Header="Browser"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding FormBrowserHost}"
					Header="{Binding FormMain.StripMenu_View_Browser}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormBrowser" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Log"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding FormLog}"
					Header="{Binding FormMain.StripMenu_View_Log}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormLog" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="JSON"
					Command="{Binding OpenViewCommand}"
					CommandParameter="{Binding FormJson}"
					Header="{Binding FormMain.StripMenu_View_Json}"
					Visibility="{Binding DebugVisibility}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormJson" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem d:Header="Window Capture" Header="{Binding FormMain.StripMenu_WindowCapture}">
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormWindowCapture" />
					</MenuItem.Icon>

					<MenuItem
						d:Header="Sub Window (_C)"
						Command="{Binding OpenViewCommand}"
						CommandParameter="{Binding WindowCapture}"
						Header="{Binding FormMain.StripMenu_WindowCapture_SubWindow}"
						/>
					<MenuItem
						d:Header="Attach All (_S)"
						Command="{Binding StripMenu_WindowCapture_AttachAll_ClickCommand}"
						Header="{Binding FormMain.StripMenu_WindowCapture_AttachAll}"
						/>
					<MenuItem
						d:Header="Detach All (_R)"
						Command="{Binding StripMenu_WindowCapture_DetachAll_ClickCommand}"
						Header="{Binding FormMain.StripMenu_WindowCapture_DetachAll}"
						/>
				</MenuItem>
			</MenuItem>
			<MenuItem
				Grid.Column="2"
				Height="Auto"
				d:Header="Tools"
				Header="{Binding FormMain.StripMenu_Tool}"
				>
				<MenuItem
					d:Header="Equipment List"
					Command="{Binding OpenEquipmentListCommand}"
					Header="{Binding FormMain.StripMenu_Tool_EquipmentList}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormEquipmentList" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem
					d:Header="Sortie Record"
					Command="{Binding OpenSortieRecordCommand}"
					Header="{Binding FormMain.SortieRecordViewer}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormEquipmentList" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Expedition Record"
					Command="{Binding OpenExpeditionRecordViewerCommand}"
					Header="{Binding FormMain.ExpeditionRecordViewer}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormEquipmentList" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Drop Record"
					Command="{Binding OpenDropRecordCommand}"
					Header="{Binding FormMain.StripMenu_Tool_DropRecord}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormDropRecord" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Development Record"
					Command="{Binding OpenDevelopmentRecordCommand}"
					Header="{Binding FormMain.StripMenu_Tool_DevelopmentRecord}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormDevelopmentRecord" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Construction Record"
					Command="{Binding OpenConstructionRecordCommand}"
					Header="{Binding FormMain.StripMenu_Tool_ConstructionRecord}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormConstructionRecord" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Resource Chart"
					Command="{Binding OpenResourceChartCommand}"
					Header="{Binding FormMain.StripMenu_Tool_ResourceChart}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormResourceChart" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Senka Viewer"
					Command="{Binding OpenSenkaViewerCommand}"
					Header="{Binding FormMain.SenkaViewer}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormResourceChart" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem
					d:Header="Ship Encyclopedia"
					Command="{Binding OpenAlbumMasterShipCommand}"
					Header="{Binding FormMain.StripMenu_Tool_AlbumMasterShip}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormAlbumShip" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Equipment Encyclopedia"
					Command="{Binding OpenAlbumMasterEquipmentCommand}"
					Header="{Binding FormMain.StripMenu_Tool_AlbumMasterEquipment}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormAlbumEquipment" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem
					d:Header="AA Defense"
					Command="{Binding OpenAntiAirDefenseCommand}"
					Header="{Binding FormMain.StripMenu_Tool_AntiAirDefense}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormAntiAirDefense" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Export Fleet Image"
					Command="{Binding OpenFleetImageGeneratorCommand}"
					Header="{Binding FormMain.StripMenu_Tool_FleetImageGenerator}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormFleetImageGenerator" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="AB Simulator"
					Command="{Binding OpenAirControlSimulatorCommand}"
					Header="{Binding FormMain.AirControlSimulator}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormBaseAirCorps" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Operation room"
					Command="{Binding OpenOperationRoomCommand}"
					Header="{Binding FormMain.OperationRoom}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormDock" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Compass simulator"
					Command="{Binding OpenCompassPredictionCommand}"
					Header="{Binding FormMain.CompassPrediction}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormCompass" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Exp Calculator"
					Command="{Binding OpenExpCheckerCommand}"
					Header="{Binding FormMain.StripMenu_Tool_ExpChecker}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormExpChecker" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Ship Progression List"
					Command="{Binding OpenKancolleProgressCommand}"
					Header="{Binding FormMain.StripMenu_Tool_KancolleProgress}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormEquipmentList" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Extra Browser"
					Command="{Binding OpenExtraBrowserCommand}"
					Header="{Binding FormMain.StripMenu_Tool_ExtraBrowser}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormBrowser" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Command="{Binding OpenQuestTrackerManagerCommand}" Header="{Binding FormMain.StripMenu_Tool_QuestTrackerManager}">
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormQuest" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Command="{Binding OpenEventLockPlannerCommand}" Header="{Binding FormMain.EventLockPlannerTitle}">
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormQuest" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Command="{Binding OpenEquipmentUpgradePlannerCommand}" Header="{Binding FormMain.EquipmentUpgradePlannerTitle}">
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormQuest" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Command="{Binding OpenAutoRefreshCommand}" Header="{Binding FormMain.AutoRefreshTitle}">
					<MenuItem.Icon>
						<common:IconContentIcon Type="BrowserRefresh" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Command="{Binding OpenExpeditionCalculatorCommand}" Header="{Binding FormMain.ExpeditionCalculatorTitle}">
					<MenuItem.Icon>
						<common:IconContentIcon Type="FleetExpedition" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					Command="{Binding OpenDatabaseExplorerCommand}"
					Header="Db explorer"
					Visibility="{Binding DatabaseBrowserVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
					/>
			</MenuItem>
			<MenuItem
				Grid.Column="3"
				Height="Auto"
				d:Header="Debug"
				Header="{Binding FormMain.StripMenu_Debug}"
				Visibility="{Binding DebugVisibility}"
				>
				<MenuItem
					d:Header="Load API From File..."
					Command="{Binding LoadAPIFromFileCommand}"
					Header="{Binding FormMain.StripMenu_Debug_LoadAPIFromFile}"
					/>
				<MenuItem
					d:Header="Load Initial API (_I)..."
					Command="{Binding LoadInitialAPICommand}"
					Header="{Binding FormMain.StripMenu_Debug_LoadInitialAPI}"
					/>
				<MenuItem Command="{Binding LoadBaseAPICommand}" Header="{Binding FormMain.StripMenu_Debug_LoadBaseAPI}" />
				<Separator />
				<MenuItem
					d:Header="Load from _Old api__start2..."
					Command="{Binding LoadRecordFromOldCommand}"
					Header="{Binding FormMain.StripMenu_Debug_LoadRecordFromOld}"
					/>
				<MenuItem
					d:Header="_Delete Old API Data"
					Command="{Binding DeleteOldAPICommand}"
					Header="{Binding FormMain.StripMenu_Debug_DeleteOldAPI}"
					/>
				<MenuItem
					d:Header="_Rename Ship Resource..."
					Command="{Binding RenameShipResourceCommand}"
					Header="{Binding FormMain.StripMenu_Debug_RenameShipResource}"
					/>
				<MenuItem
					d:Header="Re_store Abyssal Data from Old api_start2..."
					Command="{Binding LoadDataFromOldCommand}"
					Header="{Binding FormMain.StripMenu_Debug_LoadDataFromOld}"
					/>
				<Separator Visibility="{Binding GenerateMasterDataVisible, Converter={BoolToVisibilityConverter}}" />
				<MenuItem Header="Data Generation" Visibility="{Binding GenerateMasterDataVisible, Converter={BoolToVisibilityConverter}}">
					<MenuItem Command="{Binding GenerateMasterDataCommand}" Header="Generate Master Data" />
					<MenuItem Command="{Binding GenerateShipIdEnumCommand}" Header="Generate Ship ID Enum" />
					<MenuItem Command="{Binding GenerateEquipmentIdEnumCommand}" Header="Generate Equipment ID Enum" />
				</MenuItem>
			</MenuItem>
			<MenuItem
				Grid.Column="4"
				Height="Auto"
				d:Header="Help"
				Header="{Binding FormMain.StripMenu_Help}"
				>
				<MenuItem
					d:Header="View Help"
					Command="{Binding ViewHelpCommand}"
					Header="{Binding FormMain.StripMenu_Help_Help}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormInformation" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="Report a Problem"
					Command="{Binding ReportIssueCommand}"
					Header="{Binding FormMain.StripMenu_Help_Issue}"
					/>
				<MenuItem
					d:Header="Join us on Discord"
					Command="{Binding JoinDiscordCommand}"
					Header="{Binding FormMain.StripMenu_Help_Discord}"
					/>
				<Separator />
				<MenuItem
					d:Header="Check for Update"
					Command="{Binding CheckForUpdateCommand}"
					Header="{Binding FormMain.StripMenu_Help_Update}"
					/>
				<MenuItem Command="{Binding OpenReleaseNotesCommand}" Header="{Binding FormMain.StripMenu_Update_OpenReleaseNotes}">
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormInformation" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					d:Header="About Electronic Observer"
					Command="{Binding ViewVersionCommand}"
					Header="{Binding FormMain.StripMenu_Help_Version}"
					>
					<MenuItem.Icon>
						<common:IconContentIcon Type="AppIcon" />
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>

			<MenuItem
				Grid.Column="5"
				Height="Auto"
				HorizontalAlignment="Right"
				Command="{Binding OpenMaintenanceInformationLinkCommand}"
				Header="{Binding MaintenanceText}"
				Visibility="{Binding MaintenanceTextVisibility}"
				/>
			<MenuItem
				Grid.Column="6"
				Height="Auto"
				HorizontalAlignment="Right"
				Header="{Binding FormMain.StripMenu_Update_UpdateAvailable}"
				Visibility="{Binding UpdateAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"
				>
				<MenuItem Command="{Binding StartSoftwareUpdateCommand}" Header="{Binding FormMain.StripMenu_Update_DownloadUpdate}" />

				<MenuItem Command="{Binding OpenReleaseNotesCommand}" Header="{Binding FormMain.StripMenu_Update_OpenReleaseNotes}">
					<MenuItem.Icon>
						<common:IconContentIcon Type="FormInformation" />
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
			<MenuItem
				Grid.Column="7"
				Height="Auto"
				HorizontalAlignment="Right"
				Header="{Binding DownloadProgressString}"
				Visibility="{Binding DownloadProgressVisibility}"
				/>
		</Menu>
		<DockingManager
			x:Name="DockingManager"
			Grid.Row="1"
			AllowMixedOrientation="True"
			AnchorablesSource="{Binding Views}"
			GridSplitterHeight="{Binding GridSplitterSize}"
			GridSplitterWidth="{Binding GridSplitterSize}"
			IsVirtualizingAnchorable="True"
			IsVirtualizingDocument="True"
			Language="ja-JP"
			LayoutItemTemplateSelector="{StaticResource ViewTemplateSelector}"
			Theme="{Binding CurrentTheme}"
			>
			<DockingManager.Resources>
				<SolidColorBrush
					x:Key="{x:Static reskeys:ResourceKeys.TabBackground}"
					options:Freeze="true"
					Color="{Binding BackgroundColor}"
					/>
			</DockingManager.Resources>

			<DockingManager.GridSplitterVerticalStyle>
				<Style TargetType="LayoutGridResizerControl">
					<Setter Property="Width" Value="{Binding GridSplitterSize}" />
				</Style>
			</DockingManager.GridSplitterVerticalStyle>

			<DockingManager.GridSplitterHorizontalStyle>
				<Style TargetType="LayoutGridResizerControl">
					<Setter Property="Height" Value="{Binding GridSplitterSize}" />
				</Style>
			</DockingManager.GridSplitterHorizontalStyle>

			<DockingManager.DocumentHeaderTemplate>
				<DataTemplate DataType="LayoutAnchorable">
					<StackPanel Orientation="Horizontal">
						<Image
							Width="16"
							Height="16"
							Margin="0 0 4 0"
							Source="{Binding IconSource}"
							/>
						<TextBlock Text="{Binding Title}" />
						<ContentControl Template="{StaticResource AutoHideButtonTemplate}" />
					</StackPanel>
				</DataTemplate>
			</DockingManager.DocumentHeaderTemplate>

			<DockingManager.IconContentTemplate>
				<DataTemplate DataType="LayoutAnchorable">
					<Image
						Width="16"
						Height="16"
						Margin="0 0 4 0"
						Source="{Binding IconSource}"
						/>
				</DataTemplate>
			</DockingManager.IconContentTemplate>

			<DockingManager.LayoutItemContainerStyleSelector>
				<local:ViewStyleSelector>
					<local:ViewStyleSelector.AnchorableStyle>
						<Style TargetType="LayoutAnchorableItem">
							<Setter Property="Title" Value="{Binding Model.Title}" />
							<Setter Property="ContentId" Value="{Binding Model.ContentId}" />
							<Setter Property="IconSource" Value="{Binding Model.IconSource}" />
							<Setter Property="Visibility" Value="{Binding Model.Visibility, Mode=TwoWay}" />
							<Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
							<Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
							<Setter Property="CanFloat" Value="{Binding Model.CanFloat}" />
							<Setter Property="CanClose" Value="{Binding Model.CanClose, Mode=TwoWay}" />
							<Setter Property="CanHide" Value="False" />
							<Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />

							<Style.Triggers>
								<DataTrigger Binding="{Binding Model.IconSource}" Value="{x:Null}">
									<Setter Property="IconSource">
										<Setter.Value>
											<markup:Switch To="{Binding Model.Icon}">
												<markup:Case Label="{x:Static resource:IconContent.FormArsenal}" Value="{StaticResource Form.Arsenal}" />
												<markup:Case Label="{x:Static resource:IconContent.FormBaseAirCorps}" Value="{StaticResource Form.BaseAirCorps}" />
												<markup:Case Label="{x:Static resource:IconContent.FormBattle}" Value="{StaticResource Form.Battle}" />
												<markup:Case Label="{x:Static resource:IconContent.FormBrowser}" Value="{StaticResource Form.Browser}" />
												<markup:Case Label="{x:Static resource:IconContent.FormCompass}" Value="{StaticResource Form.Compass}" />
												<markup:Case Label="{x:Static resource:IconContent.FormDock}" Value="{StaticResource Form.Dock}" />
												<markup:Case Label="{x:Static resource:IconContent.FormExpeditionCheck}" Value="{StaticResource Form.ExpeditionCheck}" />
												<markup:Case Label="{x:Static resource:IconContent.FormFleet}" Value="{StaticResource Form.Fleet}" />
												<markup:Case Label="{x:Static resource:IconContent.FormFleetPreset}" Value="{StaticResource Form.FleetPreset}" />
												<markup:Case Label="{x:Static resource:IconContent.FormHeadQuarters}" Value="{StaticResource Form.Headquarters}" />
												<markup:Case Label="{x:Static resource:IconContent.FormInformation}" Value="{StaticResource Form.Information}" />
												<markup:Case Label="{x:Static resource:IconContent.FormJson}" Value="{StaticResource Form.Json}" />
												<markup:Case Label="{x:Static resource:IconContent.FormLog}" Value="{StaticResource Form.Log}" />
												<markup:Case Label="{x:Static resource:IconContent.FormQuest}" Value="{StaticResource Form.Quest}" />
												<markup:Case Label="{x:Static resource:IconContent.FormShipGroup}" Value="{StaticResource Form.ShipGroup}" />
												<markup:Case Label="{x:Static resource:IconContent.FormWindowCapture}" Value="{StaticResource Form.WindowCapture}" />
												<markup:Case Label="{x:Static resource:IconContent.FormResourceChart}" Value="{StaticResource Form.ResourceChart}" />

												<markup:Case Label="{x:Static resource:IconContent.FleetAnchorageRepairing}" Value="{StaticResource Fleet.AnchorageRepairing}" />
												<markup:Case Label="{x:Static resource:IconContent.FleetCombined}" Value="{StaticResource Fleet.Combined}" />
												<markup:Case Label="{x:Static resource:IconContent.FleetDamaged}" Value="{StaticResource Fleet.Damaged}" />
												<markup:Case Label="{x:Static resource:IconContent.FleetDocking}" Value="{StaticResource Fleet.Docking}" />
												<markup:Case Label="{x:Static resource:IconContent.FleetExpedition}" Value="{StaticResource Fleet.Expedition}" />
												<markup:Case Label="{x:Static resource:IconContent.FleetNoShip}" Value="{StaticResource Fleet.NoShip}" />
												<markup:Case Label="{x:Static resource:IconContent.FleetNotReplenished}" Value="{StaticResource Fleet.NotReplenished}" />
												<markup:Case Label="{x:Static resource:IconContent.FleetReady}" Value="{StaticResource Fleet.Ready}" />
												<markup:Case Label="{x:Static resource:IconContent.FleetSortie}" Value="{StaticResource Fleet.Sortie}" />
												<markup:Case Label="{x:Static resource:IconContent.FleetSortieDamaged}" Value="{StaticResource Fleet.SortieDamaged}" />

												<markup:Case Label="{x:Static resource:IconContent.ItemActionReport}" Value="{StaticResource Item.ActionReport}" />
												<markup:Case Label="{x:Static resource:IconContent.ItemModdingMaterial}" Value="{StaticResource Item.ModdingMaterial}" />

												<markup:Case Label="{x:Static resource:IconContent.ConditionSparkle}" Value="{StaticResource Condition.Sparkle}" />
												<markup:Case Label="{x:Static resource:IconContent.ConditionNormal}" Value="{StaticResource Condition.Normal}" />
												<markup:Case Label="{x:Static resource:IconContent.ConditionLittleTired}" Value="{StaticResource Condition.LittleTired}" />
												<markup:Case Label="{x:Static resource:IconContent.ConditionTired}" Value="{StaticResource Condition.Tired}" />
												<markup:Case Label="{x:Static resource:IconContent.ConditionVeryTired}" Value="{StaticResource Condition.VeryTired}" />

												<markup:Case Label="{x:Static resource:IconContent.ShipStateChuuha}" Value="{StaticResource ShipState.Chuuha}" />
												<markup:Case Label="{x:Static resource:IconContent.ShipStateShouha}" Value="{StaticResource ShipState.Shouha}" />
											</markup:Switch>
										</Setter.Value>
									</Setter>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</local:ViewStyleSelector.AnchorableStyle>
				</local:ViewStyleSelector>
			</DockingManager.LayoutItemContainerStyleSelector>

			<LayoutRoot>
				<LayoutPanel>
					<LayoutAnchorablePane AllowDuplicateContent="False" />
				</LayoutPanel>
			</LayoutRoot>

		</DockingManager>

		<StatusBar
			Grid.Row="2"
			DataContext="{Binding StripStatus}"
			Visibility="{Binding Visibility}"
			>
			<StatusBarItem>
				<TextBlock d:Text="Hello world!" Text="{Binding Information}" />
			</StatusBarItem>

			<StatusBarItem HorizontalAlignment="Right">
				<TextBlock
					d:Text="Clock"
					Background="Transparent"
					Text="{Binding Clock}"
					ToolTip="{Binding ClockToolTip}"
					/>
			</StatusBarItem>
		</StatusBar>
	</Grid>
</Window>
