<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdditionalInfo" xml:space="preserve">
    <value>附加信息 : {0}</value>
  </data>
  <data name="APIData" xml:space="preserve">
    <value>通讯内容 : {0}</value>
  </data>
  <data name="APIObserverStarted" xml:space="preserve">
    <value>APIObserver：开始在端口 {0} 上接收。</value>
  </data>
  <data name="APIObserverStopped" xml:space="preserve">
    <value>APIObserver：接收已停止。</value>
  </data>
  <data name="ChangedParameters" xml:space="preserve">
    <value>更新了参数。</value>
  </data>
  <data name="CreatedItem" xml:space="preserve">
    <value>{0}「{1}」开发成功。(消耗{2}/{3}/{4}/{5} 秘书舰: {6})</value>
  </data>
  <data name="DoesNotExist" xml:space="preserve">
    <value>不存在。</value>
  </data>
  <data name="EquipmentObtained" xml:space="preserve">
    <value>获得了{0}「{1}」。</value>
  </data>
  <data name="ErrorDatabaseSending" xml:space="preserve">
    <value>发送到 艦これ 统计数据库时发生错误。</value>
  </data>
  <data name="ErrorField" xml:space="preserve">
    <value>错误 : {0}</value>
  </data>
  <data name="ErrorReport" xml:space="preserve">
    <value>错误报告 : {0}</value>
  </data>
  <data name="ExecutedFlashQualitySetting" xml:space="preserve">
    <value>设置 Flash 质量。</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>失败了。</value>
  </data>
  <data name="FailedDatabaseSend" xml:space="preserve">
    <value>无法将 {0} 发送到 砍口垒 统计数据库。</value>
  </data>
  <data name="FailedLoadAPI" xml:space="preserve">
    <value>API加载失败。</value>
  </data>
  <data name="FailedLoading" xml:space="preserve">
    <value>　加载失败。</value>
  </data>
  <data name="FailedLoadingRecords" xml:space="preserve">
    <value>加载记录失败。</value>
  </data>
  <data name="FailedLoadingResource" xml:space="preserve">
    <value>加载资源文件失败。</value>
  </data>
  <data name="FailedLoadingStorage" xml:space="preserve">
    <value>无法加载数据存储。</value>
  </data>
  <data name="FailedLoadLayout" xml:space="preserve">
    <value>无法恢复窗口布局。</value>
  </data>
  <data name="FailedLoadSubLayout" xml:space="preserve">
    <value>无法恢复子窗口布局。</value>
  </data>
  <data name="FailedLoadWindowPlacement" xml:space="preserve">
    <value>无法恢复窗口状态。</value>
  </data>
  <data name="FailedResourceRename" xml:space="preserve">
    <value>无法重命名舰娘资源。</value>
  </data>
  <data name="FailedSaveLayout" xml:space="preserve">
    <value>无法保存子窗口布局。</value>
  </data>
  <data name="FailedSaveAPI" xml:space="preserve">
    <value>保存通讯内容失败。 </value>
  </data>
  <data name="FailedSaveWindowPlacement" xml:space="preserve">
    <value>无法保存窗口状态。</value>
  </data>
  <data name="FailedSaving" xml:space="preserve">
    <value>无法存储。</value>
  </data>
  <data name="FailedSavingErrorReport" xml:space="preserve">
    <value>无法写入错误报告。
{0}
{1}</value>
  </data>
  <data name="FailedSavingStorage" xml:space="preserve">
    <value>数据存储写入失败。</value>
  </data>
  <data name="FailedToLoadAPIFile" xml:space="preserve">
    <value>API文件 {0} 的加载失败了。{1}</value>
  </data>
  <data name="GameStart" xml:space="preserve">
    <value>提督已抵达镇守府。正在将舰队指挥权转交给您。</value>
  </data>
  <data name="ImageCantBeLoaded" xml:space="preserve">
    <value>图像资源 {0} 加载失败。</value>
  </data>
  <data name="ImageDoesNotExist" xml:space="preserve">
    <value>图像资源 {0} 不存在。</value>
  </data>
  <data name="ImprovedFailure" xml:space="preserve">
    <value>{0} 的改修失败了。</value>
  </data>
  <data name="ImprovedSuccess" xml:space="preserve">
    <value>的改修成功了。( </value>
  </data>
  <data name="InitialEquipRegistered" xml:space="preserve">
    <value>的初始装备已记录。</value>
  </data>
  <data name="ItemCreationFailed" xml:space="preserve">
    <value>开发失败。(消耗 {0}/{1}/{2}/{3} 秘书舰: {4})</value>
  </data>
  <data name="ItemObtained" xml:space="preserve">
    <value>获得物品「{0}」。（总计：{1} 个）</value>
  </data>
  <data name="JustMarried" xml:space="preserve">
    <value>您现已与 {0} 结婚了。（运+{1}→{2}/{3})</value>
  </data>
  <data name="LoadedRecords" xml:space="preserve">
    <value>记录已加载。</value>
  </data>
  <data name="RecievedRequest" xml:space="preserve">
    <value>收到请求：</value>
  </data>
  <data name="Record" xml:space="preserve">
    <value>记录 </value>
  </data>
  <data name="RegisteredParameters" xml:space="preserve">
    <value>的参数已记录。</value>
  </data>
  <data name="RequestError" xml:space="preserve">
    <value>接收请求时发生错误。</value>
  </data>
  <data name="ResponseHadErrorCode" xml:space="preserve">
    <value>从服务器收到错误代码。</value>
  </data>
  <data name="SavedAPI" xml:space="preserve">
    <value>已保存 API 文件 {0}。</value>
  </data>
  <data name="SentDatabase" xml:space="preserve">
    <value>已将 {0} 发送至 砍口垒 统计数据库。</value>
  </data>
  <data name="ShipAdded" xml:space="preserve">
    <value>{0}「{1}」加入了您的舰队。</value>
  </data>
  <data name="ShipConstructed" xml:space="preserve">
    <value>{0}「{1}」的建造已完成。</value>
  </data>
  <data name="ShipScrapped" xml:space="preserve">
    <value>已解体。</value>
  </data>
  <data name="StorageDoesNotExist" xml:space="preserve">
    <value>数据存储 {0} 不存在。</value>
  </data>
  <data name="StorageFileDoesNotExist" xml:space="preserve">
    <value>数据存储文件不存在。</value>
  </data>
  <data name="Copied" xml:space="preserve">
    <value>{0} 已被复制。</value>
  </data>
  <data name="Decomissioned" xml:space="preserve">
    <value> 已退役。</value>
  </data>
  <data name="FailedToCopy" xml:space="preserve">
    <value>复制 {0} 失败。 {1}</value>
  </data>
  <data name="MultiplePossibleMvps" xml:space="preserve">
    <value>MVP 候选人有多位。请检查日志。</value>
  </data>
  <data name="RecordAutosaveFailure" xml:space="preserve">
    <value>自动保存记录失败。</value>
  </data>
  <data name="RecordAutosaveSuccess" xml:space="preserve">
    <value>执行了记录的自动保存。</value>
  </data>
  <data name="ImprovedEqSuccess" xml:space="preserve">
    <value>对{0}的修改成功。</value>
  </data>
  <data name="ClearedQuest" xml:space="preserve">
    <value>任务『{0}』已完成。</value>
  </data>
  <data name="SortiedTo" xml:space="preserve">
    <value>#{0}「{1}」 正在出击 「{2}-{3} {4}」。</value>
  </data>
  <data name="ExpedStarted" xml:space="preserve">
    <value>#{0}「{1}」正在远征「{2}: {3}」。</value>
  </data>
</root>