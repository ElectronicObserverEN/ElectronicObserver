<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ItemNameToolTip" xml:space="preserve">
    <value>指定要搜索的项目名称。
(Drop) 仅当项目被丢弃时才提取。</value>
  </data>
  <data name="ShipNameToolTip" xml:space="preserve">
    <value>指定要搜索的舰娘名称。</value>
  </data>
  <data name="EquipmentNameToolTip" xml:space="preserve">
    <value>指定要搜索的装备名称。</value>
  </data>
  <data name="DateBeginToolTip" xml:space="preserve">
    <value>指定搜索的开始日期。</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="End" xml:space="preserve">
    <value>结束</value>
  </data>
  <data name="DateEndToolTip" xml:space="preserve">
    <value>指定搜索的结束日期。</value>
  </data>
  <data name="RankSToolTip" xml:space="preserve">
    <value>S胜</value>
  </data>
  <data name="RankAToolTip" xml:space="preserve">
    <value>A胜</value>
  </data>
  <data name="RankBToolTip" xml:space="preserve">
    <value>B胜</value>
  </data>
  <data name="RankXToolTip" xml:space="preserve">
    <value>败北</value>
  </data>
  <data name="MapDifficultyToolTip" xml:space="preserve">
    <value>指定海图的难度。</value>
  </data>
  <data name="ButtonRun" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="RecordView_Name" xml:space="preserve">
    <value>名字</value>
  </data>
  <data name="RecordView_Date" xml:space="preserve">
    <value>日期</value>
  </data>
  <data name="RecordView_Map" xml:space="preserve">
    <value>海域</value>
  </data>
  <data name="RecordView_Rank" xml:space="preserve">
    <value>RANK</value>
  </data>
  <data name="RecordView_RankS" xml:space="preserve">
    <value>S胜</value>
  </data>
  <data name="RecordView_RankA" xml:space="preserve">
    <value>A胜</value>
  </data>
  <data name="RecordView_RankB" xml:space="preserve">
    <value>B胜</value>
  </data>
  <data name="IsBossOnly" xml:space="preserve">
    <value>Boss</value>
  </data>
  <data name="MapAreaIDToolTip" xml:space="preserve">
    <value>指定海域ID。
*ID大于20为活动海域。</value>
  </data>
  <data name="MapInfoIDToolTip" xml:space="preserve">
    <value>指定海域ID。</value>
  </data>
  <data name="MapCellIDToolTip" xml:space="preserve">
    <value>指定海域ID。</value>
  </data>
  <data name="MergeRowsToolTip" xml:space="preserve">
    <value>合并相同掉落物。</value>
  </data>
  <data name="LabelShipName" xml:space="preserve">
    <value>舰船</value>
  </data>
  <data name="LabelItemName" xml:space="preserve">
    <value>物品</value>
  </data>
  <data name="LabelEquipmentName" xml:space="preserve">
    <value>装备</value>
  </data>
  <data name="StatusInfo" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="statusStrip1" xml:space="preserve">
    <value>状态条1</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>删除日志</value>
  </data>
  <data name="NameAny" xml:space="preserve">
    <value>(全部)</value>
  </data>
  <data name="NameNotExist" xml:space="preserve">
    <value>(无)</value>
  </data>
  <data name="NameFullPort" xml:space="preserve">
    <value>(满)</value>
  </data>
  <data name="NameExist" xml:space="preserve">
    <value>(降低)</value>
  </data>
  <data name="Boss" xml:space="preserve">
    <value> [Boss]</value>
  </data>
  <data name="BattleHistoryNotFound" xml:space="preserve">
    <value>没有找到战斗日志。</value>
  </data>
  <data name="SearchingBattleHistory" xml:space="preserve">
    <value>正在搜索战斗日志...</value>
  </data>
  <data name="OpenBattleHistory" xml:space="preserve">
    <value>打开战斗日志{0}。</value>
  </data>
  <data name="CouldNotOpenBattleHistory" xml:space="preserve">
    <value>无法打开战斗日志。</value>
  </data>
  <data name="SelectedItems" xml:space="preserve">
    <value>所选项目：{0} / {1} ({2:p1})</value>
  </data>
  <data name="Today" xml:space="preserve">
    <value>今天</value>
  </data>
  <data name="IgnoreCommonDrops" xml:space="preserve">
    <value>忽略常见掉落</value>
  </data>
</root>