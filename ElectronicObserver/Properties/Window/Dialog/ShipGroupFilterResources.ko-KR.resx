<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ClearConstFilter" xml:space="preserve">
    <value>초기화</value>
  </data>
  <data name="ConvertToExpression" xml:space="preserve">
    <value>식으로 변환</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>(설명)</value>
  </data>
  <data name="ExpressionDetailView_LeftOperand" xml:space="preserve">
    <value>좌변</value>
  </data>
  <data name="ExpressionDetailView_Operator" xml:space="preserve">
    <value>조건</value>
  </data>
  <data name="ExpressionDetailView_RightOperand" xml:space="preserve">
    <value>우변</value>
  </data>
  <data name="ExpressionDetail_Add" xml:space="preserve">
    <value>추가</value>
  </data>
  <data name="ExpressionDetail_Delete" xml:space="preserve">
    <value>삭제</value>
  </data>
  <data name="ExpressionDetail_Edit" xml:space="preserve">
    <value>덮어쓰기</value>
  </data>
  <data name="ExpressionView_Expression" xml:space="preserve">
    <value>식</value>
  </data>
  <data name="ExpressionView_ExternalAndOr" xml:space="preserve">
    <value>외 조건</value>
  </data>
  <data name="ExpressionView_InternalAndOr" xml:space="preserve">
    <value>내 조건</value>
  </data>
  <data name="ExpressionView_Inverse" xml:space="preserve">
    <value>비</value>
  </data>
  <data name="Expression_Add" xml:space="preserve">
    <value>추가</value>
  </data>
  <data name="Expression_Delete" xml:space="preserve">
    <value>삭제</value>
  </data>
  <data name="label1" xml:space="preserve">
    <value>필터 내용에 상관없이 추가/제외될 칸무스 목록입니다.
추가는 그룹 본체의 우클릭 메뉴에서 행하여 주세요.</value>
  </data>
  <data name="OptimizeConstFilter" xml:space="preserve">
    <value>최적화</value>
  </data>
  <data name="tabPage1" xml:space="preserve">
    <value>필터</value>
  </data>
  <data name="tabPage2" xml:space="preserve">
    <value>포함/제외 목록</value>
  </data>
  <data name="ExpressionView_Enabled" xml:space="preserve">
    <value>활성화/비활성화</value>
  </data>
  <data name="ExpressionView_Inverse_ToolTip" xml:space="preserve">
    <value>조건을 반전할지</value>
  </data>
  <data name="ExpressionView_Up" xml:space="preserve">
    <value>↑</value>
  </data>
  <data name="ExpressionView_Up_ToolTip" xml:space="preserve">
    <value>위로</value>
  </data>
  <data name="ExpressionView_Down" xml:space="preserve">
    <value>↓</value>
  </data>
  <data name="ExpressionView_Down_ToolTip" xml:space="preserve">
    <value>아래로</value>
  </data>
  <data name="ExpressionDetailView_Enabled" xml:space="preserve">
    <value>○</value>
  </data>
  <data name="ExpressionDetailView_Enabled_ToolTip" xml:space="preserve">
    <value>활성화/비활성화</value>
  </data>
  <data name="ConvertToExpression_ToolTip" xml:space="preserve">
    <value>포함/제외 목록을 식으로 변환합니다.
역변환은 불가합니다.</value>
  </data>
  <data name="OptimizeConstFilter_ToolTip" xml:space="preserve">
    <value>존재하지 않는 칸무스를 리스트에서 제거합니다.</value>
  </data>
  <data name="ClearConstFilter_ToolTip" xml:space="preserve">
    <value>목록 내용을 전부 삭제합니다.</value>
  </data>
  <data name="SelectARow" xml:space="preserve">
    <value>대상으로 할 행을 선택하세요.</value>
  </data>
  <data name="SelectExpressionRow" xml:space="preserve">
    <value>대상이 되는 식(좌측)의 행을 선택하세요.
행이 존재하지 않을 경우엔 추가해 주세요.</value>
  </data>
  <data name="SelectSequence" xml:space="preserve">
    <value>대상으로 할 식렬(좌측)을 선택하세요.</value>
  </data>
  <data name="SelectTargetRow" xml:space="preserve">
    <value>대상으로 할 행을 선택하세요.</value>
  </data>
  <data name="ClearFilterWarningTitle" xml:space="preserve">
    <value>초기화 확인</value>
  </data>
  <data name="ClearFilterWarning" xml:space="preserve">
    <value>{0} 를 초기화합니다.
괜찮습니까?</value>
  </data>
  <data name="ConvertToExpressionWarning" xml:space="preserve">
    <value>현재 포함/제외 목록을 식으로 변환합니다.
역변환은 불가합니다.
괜찮습니까?</value>
  </data>
  <data name="ImportFilterFromClipboard" xml:space="preserve">
    <value>클립보드에서 필터를 불러옵니다.
현재 필터는 파기됩니다. (포함/제외 필터는 유지됩니다.)
괜찮습니까?</value>
  </data>
  <data name="ImportFilterFromClipboardTitle" xml:space="preserve">
    <value>필터 불러오기 확인</value>
  </data>
  <data name="ClipboardIsEmpty" xml:space="preserve">
    <value>클립보드가 비어있습니다.
필터 데이터를 복사한 후에 다시 선택해 주세요.</value>
  </data>
  <data name="CanNotImport" xml:space="preserve">
    <value>불러올 수 없습니다.</value>
  </data>
  <data name="FormatCanNotBeImported" xml:space="preserve">
    <value>불러올 수 없는 데이터 형식입니다.</value>
  </data>
  <data name="FilterImportFailed" xml:space="preserve">
    <value>필터 불러오기에 실패했습니다.</value>
  </data>
  <data name="FilterWasExported" xml:space="preserve">
    <value>필터를 클립보드에 내보냈습니다.
「필터 가져오기」에 사용하거나
메모장 등에 붙여넣어 저장해 주세요.
</value>
  </data>
  <data name="ExportingFilterTitle" xml:space="preserve">
    <value>필터 내보내기</value>
  </data>
  <data name="FilterExportFailed" xml:space="preserve">
    <value>필터를 내보내는데 실패했습니다.</value>
  </data>
  <data name="CanNotExport" xml:space="preserve">
    <value>내보낼 수 없습니다.</value>
  </data>
  <data name="ButtonCancel" xml:space="preserve">
    <value>취소</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>필터</value>
  </data>
  <data name="InclusionExclusionList" xml:space="preserve">
    <value>포함/제외 목록</value>
  </data>
  <data name="ConstFilterView_Name" xml:space="preserve">
    <value>함명</value>
  </data>
  <data name="ConstFilterSelector_InclusionList" xml:space="preserve">
    <value>포함 목록</value>
  </data>
  <data name="ConstFilterSelector_ExclusionList" xml:space="preserve">
    <value>제외 목록</value>
  </data>
  <data name="ButtonMenu" xml:space="preserve">
    <value>메뉴 ▼</value>
  </data>
  <data name="SubMenu_ImportFilter" xml:space="preserve">
    <value>필터 가져오기(&amp;I)</value>
  </data>
  <data name="SubMenu_ExportFilter" xml:space="preserve">
    <value>필터 내보내기(&amp;E)</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>필터 설정</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>에러</value>
  </data>
</root>