<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Old" xml:space="preserve">
    <value>旧</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>新</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>文件(_F)</value>
  </data>
  <data name="File_Close" xml:space="preserve">
    <value>关闭(&amp;X)</value>
  </data>
  <data name="File_Configuration" xml:space="preserve">
    <value>设置(&amp;C)...</value>
  </data>
  <data name="File_Layout" xml:space="preserve">
    <value>布局(&amp;L)</value>
  </data>
  <data name="File_Layout_Change" xml:space="preserve">
    <value>保存到另一个文件(&amp;C)...</value>
  </data>
  <data name="File_Layout_Load" xml:space="preserve">
    <value>恢复(&amp;L)</value>
  </data>
  <data name="File_Layout_LockLayout" xml:space="preserve">
    <value>锁定布局(&amp;T)</value>
  </data>
  <data name="File_Layout_Open" xml:space="preserve">
    <value>从另一个文件恢复(&amp;O)...</value>
  </data>
  <data name="File_Layout_Save" xml:space="preserve">
    <value>保存(&amp;S)</value>
  </data>
  <data name="File_Layout_TopMost" xml:space="preserve">
    <value>窗口最前端(&amp;M)</value>
  </data>
  <data name="File_Notification" xml:space="preserve">
    <value>通知(&amp;N)</value>
  </data>
  <data name="File_Notification_MuteAll" xml:space="preserve">
    <value>将所有通知静音(&amp;M)</value>
  </data>
  <data name="File_Record" xml:space="preserve">
    <value>记录(&amp;R)</value>
  </data>
  <data name="File_Record_Load" xml:space="preserve">
    <value>加载(&amp;L)</value>
  </data>
  <data name="File_Record_Save" xml:space="preserve">
    <value>保存(&amp;S)</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>显示(_V)</value>
  </data>
  <data name="View_Fleet" xml:space="preserve">
    <value>舰队(&amp;F)</value>
  </data>
  <data name="View_Fleet_1" xml:space="preserve">
    <value>#&amp;1</value>
  </data>
  <data name="View_Fleet_2" xml:space="preserve">
    <value>#&amp;2</value>
  </data>
  <data name="View_Fleet_3" xml:space="preserve">
    <value>#&amp;3</value>
  </data>
  <data name="View_Fleet_4" xml:space="preserve">
    <value>#&amp;4</value>
  </data>
  <data name="View_FleetOverview" xml:space="preserve">
    <value>舰队一览(&amp;O)</value>
  </data>
  <data name="View_ShipGroup" xml:space="preserve">
    <value>舰娘列表(&amp;G)</value>
  </data>
  <data name="View_Dock" xml:space="preserve">
    <value>入渠(&amp;D)</value>
  </data>
  <data name="View_Arsenal" xml:space="preserve">
    <value>工厂(&amp;A)</value>
  </data>
  <data name="View_BaseAirCorps" xml:space="preserve">
    <value>基地航空队(&amp;S)</value>
  </data>
  <data name="View_Headquarters" xml:space="preserve">
    <value>司令部(&amp;H)</value>
  </data>
  <data name="View_Quest" xml:space="preserve">
    <value>任务(&amp;Q)</value>
  </data>
  <data name="View_Information" xml:space="preserve">
    <value>信息(&amp;I)</value>
  </data>
  <data name="View_Compass" xml:space="preserve">
    <value>罗盘(&amp;C)</value>
  </data>
  <data name="View_Battle" xml:space="preserve">
    <value>战斗(&amp;B)</value>
  </data>
  <data name="View_Browser" xml:space="preserve">
    <value>浏览器 (&amp;M)</value>
  </data>
  <data name="View_Log" xml:space="preserve">
    <value>日志(&amp;L)</value>
  </data>
  <data name="WindowCapture" xml:space="preserve">
    <value>窗口捕捉(&amp;W)</value>
  </data>
  <data name="WindowCapture_SubWindow" xml:space="preserve">
    <value>子窗口 (&amp;C)</value>
  </data>
  <data name="WindowCapture_AttachAll" xml:space="preserve">
    <value>再次搜索并导入所有内容 (&amp;S)</value>
  </data>
  <data name="WindowCapture_DetachAll" xml:space="preserve">
    <value>打开所有窗口(&amp;R)</value>
  </data>
  <data name="View_Json" xml:space="preserve">
    <value>JSON(&amp;J)</value>
  </data>
  <data name="Tool" xml:space="preserve">
    <value>工具(&amp;T)</value>
  </data>
  <data name="Tool_EquipmentList" xml:space="preserve">
    <value>装备一览(&amp;Q)</value>
  </data>
  <data name="Tool_DropRecord" xml:space="preserve">
    <value>掉落记录(&amp;D)</value>
  </data>
  <data name="Tool_DevelopmentRecord" xml:space="preserve">
    <value>开发记录(&amp;V)</value>
  </data>
  <data name="Tool_ConstructionRecord" xml:space="preserve">
    <value>建造记录(&amp;R)</value>
  </data>
  <data name="Tool_ResourceChart" xml:space="preserve">
    <value>資源图表(&amp;C)</value>
  </data>
  <data name="Tool_AlbumMasterShip" xml:space="preserve">
    <value>舰娘图鉴(&amp;S)</value>
  </data>
  <data name="Tool_AlbumMasterEquipment" xml:space="preserve">
    <value>装备图鉴(&amp;E)</value>
  </data>
  <data name="Tool_AntiAirDefense" xml:space="preserve">
    <value>防空火力详情(&amp;A)</value>
  </data>
  <data name="Tool_FleetImageGenerator" xml:space="preserve">
    <value>输出编成图像(&amp;F)</value>
  </data>
  <data name="Tool_BaseAirCorpsSimulation" xml:space="preserve">
    <value>基地航空队编成(&amp;B)</value>
  </data>
  <data name="Tool_ExpChecker" xml:space="preserve">
    <value>计算所需经验值(&amp;X)</value>
  </data>
  <data name="Tool_ExpeditionCheck" xml:space="preserve">
    <value>远征检查(&amp;M)</value>
  </data>
  <data name="Tool_ExtraBrowser" xml:space="preserve">
    <value>额外的浏览器</value>
  </data>
  <data name="Debug" xml:space="preserve">
    <value>Debug(&amp;D)</value>
  </data>
  <data name="Debug_LoadAPIFromFile" xml:space="preserve">
    <value>从文件加载 API(&amp;L)...</value>
  </data>
  <data name="Debug_LoadInitialAPI" xml:space="preserve">
    <value>加载 API 列表(&amp;A)...</value>
  </data>
  <data name="Debug_LoadRecordFromOld" xml:space="preserve">
    <value>从旧的 api_start2 构建记录(&amp;O)...</value>
  </data>
  <data name="ErrorCaption" xml:space="preserve">
    <value>错误</value>
  </data>
  <data name="OperationRoom" xml:space="preserve">
    <value>作战室</value>
  </data>
  <data name="Debug_DeleteOldAPI" xml:space="preserve">
    <value>删除旧的 API 数据(&amp;D)</value>
  </data>
  <data name="Debug_RenameShipResource" xml:space="preserve">
    <value>重命名舰娘资源(&amp;R)...</value>
  </data>
  <data name="Debug_LoadDataFromOld" xml:space="preserve">
    <value>从旧的api_start2恢复深海栖舰(&amp;A)...</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>帮助(&amp;H)</value>
  </data>
  <data name="Help_Help" xml:space="preserve">
    <value>在线帮助(&amp;H)...</value>
  </data>
  <data name="Help_Version" xml:space="preserve">
    <value>版本信息(&amp;V)</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>准备中...</value>
  </data>
  <data name="Clock" xml:space="preserve">
    <value>钟</value>
  </data>
  <data name="View_FleetPreset" xml:space="preserve">
    <value>舰队和预设(&amp;P)</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>试制七四式电子观测仪</value>
  </data>
  <data name="Help_Issue" xml:space="preserve">
    <value>报告问题</value>
  </data>
  <data name="Help_Discord" xml:space="preserve">
    <value>加入我们的 Discord</value>
  </data>
  <data name="Help_Update" xml:space="preserve">
    <value>检查更新</value>
  </data>
  <data name="Starting" xml:space="preserve">
    <value> 开始…</value>
  </data>
  <data name="ExitConfirmation" xml:space="preserve">
    <value>{0}你想退出吗？</value>
  </data>
  <data name="ConfirmatonCaption" xml:space="preserve">
    <value>确认</value>
  </data>
  <data name="LayoutLoaded" xml:space="preserve">
    <value>已成功从 {0} 加载窗口布局。</value>
  </data>
  <data name="ShipDataNotLoaded" xml:space="preserve">
    <value>舰娘数据尚未加载。</value>
  </data>
  <data name="EquipmentDataNotLoaded" xml:space="preserve">
    <value>装备数据尚未加载。</value>
  </data>
  <data name="OpenEOWiki" xml:space="preserve">
    <value>这将使用您的浏览器打开 EO wiki。
你确定吗？</value>
  </data>
  <data name="HelpCaption" xml:space="preserve">
    <value>帮助</value>
  </data>
  <data name="ReportIssue" xml:space="preserve">
    <value>在外部浏览器中打开联机帮助。
你确定吗？</value>
  </data>
  <data name="ReportIssueCaption" xml:space="preserve">
    <value>报告问题</value>
  </data>
  <data name="FailedToOpenBrowser" xml:space="preserve">
    <value>无法打开浏览器</value>
  </data>
  <data name="OpenLayoutCaption" xml:space="preserve">
    <value>打开布局文件</value>
  </data>
  <data name="SaveLayoutCaption" xml:space="preserve">
    <value>保存布局文件</value>
  </data>
  <data name="EventStartsIn" xml:space="preserve">
    <value>活动将于 {0} 开始</value>
  </data>
  <data name="EventHasStarted" xml:space="preserve">
    <value>活动已经开始。</value>
  </data>
  <data name="EventEndsIn" xml:space="preserve">
    <value>活动将于 {0} 结束</value>
  </data>
  <data name="EventHasEnded" xml:space="preserve">
    <value>活动期间已结束。</value>
  </data>
  <data name="MaintenanceStartsIn" xml:space="preserve">
    <value>维护将于 {0} 开始</value>
  </data>
  <data name="MaintenanceHasEnded" xml:space="preserve">
    <value>维护已结束</value>
  </data>
  <data name="NextExerciseReset" xml:space="preserve">
    <value>下次演习重置：</value>
  </data>
  <data name="NextQuestReset" xml:space="preserve">
    <value>下次任务重置：</value>
  </data>
  <data name="MissingPermissions" xml:space="preserve">
    <value>您的 Windows 用户无权在当前位置创建文件。将 74EO 文件夹移动到您有写入权限的位置，例如桌面上。</value>
  </data>
  <data name="QuestDataNotLoaded" xml:space="preserve">
    <value>任务数据未加载。</value>
  </data>
  <data name="LayoutLoadFailed" xml:space="preserve">
    <value>检查您是否有有效的布局文件。
布局在 5.0.0 版本中被破坏，因此之前创建的布局不再起作用。
有关更多信息或获取现有布局，请参阅此 github 问题：https://github.com/ElectronicObserverEN/ElectronicObserver/issues/71

您想打开这个 github 问题吗？</value>
  </data>
  <data name="LayoutLoadFailedTitle" xml:space="preserve">
    <value>无法加载布局</value>
  </data>
  <data name="CopyingToClipboardFailed" xml:space="preserve">
    <value>复制到剪贴板失败。</value>
  </data>
  <data name="Adjustment" xml:space="preserve">
    <value>调整</value>
  </data>
  <data name="GridSplitterSize" xml:space="preserve">
    <value>网格分割器尺寸</value>
  </data>
  <data name="Update_DownloadUpdate" xml:space="preserve">
    <value>下载更新 (_D)</value>
  </data>
  <data name="Update_OpenReleaseNotes" xml:space="preserve">
    <value>リリースノートを開く (_O)</value>
  </data>
  <data name="Update_UpdateAvailable" xml:space="preserve">
    <value>有可用更新 (_U)</value>
  </data>
  <data name="Update_DownloadingUpdate" xml:space="preserve">
    <value>正在下载更新... ({0:##0.00}%)</value>
  </data>
  <data name="Update_DownloadingUpdater" xml:space="preserve">
    <value>正在下载更新程序... ({0:##0.00}%)</value>
  </data>
  <data name="Debug_LoadBaseAPI" xml:space="preserve">
    <value>加载保存的API</value>
  </data>
  <data name="WindowCaptureLoadFailed" xml:space="preserve">
    <value>无法加载窗口捕获数据</value>
  </data>
  <data name="GitHubWikiLink" xml:space="preserve">
    <value>https://github.com/RyuuKitsune/ElectronicObserver/wiki</value>
  </data>
  <data name="MaintenanceEndsIn" xml:space="preserve">
    <value>维护结束于 {0}</value>
  </data>
  <data name="MaintenanceHasStarted" xml:space="preserve">
    <value>维护已开始</value>
  </data>
</root>