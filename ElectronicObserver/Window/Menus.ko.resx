<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Alignment_Bottom" xml:space="preserve">
    <value>아래(&amp;B)</value>
  </data>
  <data name="Alignment_Invisible" xml:space="preserve">
    <value>비표시(&amp;I)</value>
  </data>
  <data name="Alignment_Left" xml:space="preserve">
    <value>왼쪽(&amp;L)</value>
  </data>
  <data name="Alignment_Right" xml:space="preserve">
    <value>오른쪽(&amp;R)</value>
  </data>
  <data name="Alignment_Top" xml:space="preserve">
    <value>위쪽(&amp;T)</value>
  </data>
  <data name="Arsenal" xml:space="preserve">
    <value>공창(&amp;A)</value>
  </data>
  <data name="Battle" xml:space="preserve">
    <value>전투(&amp;B)</value>
  </data>
  <data name="Browser" xml:space="preserve">
    <value>브라우저</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>종료(&amp;X)</value>
  </data>
  <data name="Compass" xml:space="preserve">
    <value>나침반(&amp;C)</value>
  </data>
  <data name="ControlWindow" xml:space="preserve">
    <value>컨트롤 윈도우(&amp;C)</value>
  </data>
  <data name="DeleteOldAPI" xml:space="preserve">
    <value>낡은 API 데이터를 삭제(&amp;D)</value>
  </data>
  <data name="DetachAll" xml:space="preserve">
    <value>모든 윈도우를 해방(&amp;R)</value>
  </data>
  <data name="Dock" xml:space="preserve">
    <value>입거(&amp;D)</value>
  </data>
  <data name="EquipEncyclopedia" xml:space="preserve">
    <value>장비 도감(&amp;E)</value>
  </data>
  <data name="EquipmentList" xml:space="preserve">
    <value>장비 일람(&amp;Q)</value>
  </data>
  <data name="FleetList" xml:space="preserve">
    <value>함대 일람(&amp;O)</value>
  </data>
  <data name="Fleets" xml:space="preserve">
    <value>함대(&amp;F)</value>
  </data>
  <data name="Headquarters" xml:space="preserve">
    <value>사령부(&amp;H)</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>정보(&amp;I)</value>
  </data>
  <data name="Layout" xml:space="preserve">
    <value>레이아웃(&amp;L)</value>
  </data>
  <data name="LayoutOpen" xml:space="preserve">
    <value>다른 파일로부터 로드(&amp;O)...</value>
  </data>
  <data name="Load" xml:space="preserve">
    <value>로드(&amp;L)</value>
  </data>
  <data name="LoadAPIFromFile" xml:space="preserve">
    <value>파일로부터 API를 로드(&amp;L)...</value>
  </data>
  <data name="LoadAPIList" xml:space="preserve">
    <value>API 리스트를 로드(&amp;I)...</value>
  </data>
  <data name="LoadOldAPIRecord" xml:space="preserve">
    <value>구버전 api_start2로부터 기록을 구축(&amp;O)...</value>
  </data>
  <data name="Log" xml:space="preserve">
    <value>로그(&amp;L)</value>
  </data>
  <data name="OnlineHelp" xml:space="preserve">
    <value>온라인 도움말(&amp;H)...</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>그 외</value>
  </data>
  <data name="Other_Alignment" xml:space="preserve">
    <value>배치(&amp;A)</value>
  </data>
  <data name="Other_ApplyStyleSheet" xml:space="preserve">
    <value>스타일 시트를 적용한다.</value>
  </data>
  <data name="Other_Mute" xml:space="preserve">
    <value>음소거(&amp;M)</value>
  </data>
  <data name="Other_Navigate" xml:space="preserve">
    <value>이동(&amp;N)...</value>
  </data>
  <data name="Other_NavigateToLogInPage" xml:space="preserve">
    <value>로그인 페이지로 이동(&amp;L)</value>
  </data>
  <data name="Other_Refresh" xml:space="preserve">
    <value>새로고침(&amp;R)</value>
  </data>
  <data name="Other_RegionCookie" xml:space="preserve">
    <value>지역 제한 쿠키를 설정</value>
  </data>
  <data name="Other_Screenshot" xml:space="preserve">
    <value>스크린샷(&amp;S)</value>
  </data>
  <data name="Other_Zoom" xml:space="preserve">
    <value>줌(&amp;Z)</value>
  </data>
  <data name="Other_Zoom_Current" xml:space="preserve">
    <value>현재%</value>
  </data>
  <data name="Other_Zoom_Fit" xml:space="preserve">
    <value>창에 맞춤</value>
  </data>
  <data name="Quest" xml:space="preserve">
    <value>임무(&amp;Q)</value>
  </data>
  <data name="ReattachAll" xml:space="preserve">
    <value>전체를 재검색 해서 불러오기(&amp;S)</value>
  </data>
  <data name="Record" xml:space="preserve">
    <value>기록(&amp;R)</value>
  </data>
  <data name="RenameShipResource" xml:space="preserve">
    <value>함선 리소스 이름을 바꾸기(&amp;R)...</value>
  </data>
  <data name="ResourceChart" xml:space="preserve">
    <value>자원 차트(&amp;C)</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>세이브(&amp;S)</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>설정(&amp;C)...</value>
  </data>
  <data name="ShipEncyclopedia" xml:space="preserve">
    <value>함선 도감(&amp;S)</value>
  </data>
  <data name="ShipGroup" xml:space="preserve">
    <value>함선 그룹(&amp;G)</value>
  </data>
  <data name="ShowShipName" xml:space="preserve">
    <value>함선 이름을 표시(&amp;V)</value>
  </data>
  <data name="ShowToolMenu" xml:space="preserve">
    <value>툴 메뉴를 표시</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>74식 전자 관측의</value>
  </data>
  <data name="VersionInfo" xml:space="preserve">
    <value>버전 정보(&amp;V)</value>
  </data>
  <data name="WindowCapture" xml:space="preserve">
    <value>창을 캡쳐(&amp;W)</value>
  </data>
</root>