<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Alignment_Bottom" xml:space="preserve">
    <value>下(&amp;B)</value>
  </data>
  <data name="Alignment_Invisible" xml:space="preserve">
    <value>非表示(&amp;I)</value>
  </data>
  <data name="Alignment_Left" xml:space="preserve">
    <value>左(&amp;L)</value>
  </data>
  <data name="Alignment_Right" xml:space="preserve">
    <value>右(&amp;R)</value>
  </data>
  <data name="Alignment_Top" xml:space="preserve">
    <value>上(&amp;T)</value>
  </data>
  <data name="Arsenal" xml:space="preserve">
    <value>工廠(&amp;A)</value>
  </data>
  <data name="Battle" xml:space="preserve">
    <value>戦闘(&amp;B)</value>
  </data>
  <data name="Browser" xml:space="preserve">
    <value>ブラウザ</value>
  </data>
  <data name="BuildRecord" xml:space="preserve">
    <value>建造記録(&amp;R)</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>終了(&amp;X)</value>
  </data>
  <data name="Compass" xml:space="preserve">
    <value>羅針盤(&amp;C)</value>
  </data>
  <data name="ConstructionRecord" xml:space="preserve">
    <value>建造記録(&amp;R)</value>
  </data>
  <data name="ControlWindow" xml:space="preserve">
    <value>コントロールウィンドウ(&amp;C)</value>
  </data>
  <data name="Debug" xml:space="preserve">
    <value>デバッグ(&amp;D)</value>
  </data>
  <data name="DeleteOldAPI" xml:space="preserve">
    <value>古いAPIデータを削除(&amp;D)</value>
  </data>
  <data name="DetachAll" xml:space="preserve">
    <value>全てのウィンドウを開放(&amp;R)</value>
  </data>
  <data name="DevRecord" xml:space="preserve">
    <value>開発記録(&amp;V)</value>
  </data>
  <data name="Dock" xml:space="preserve">
    <value>入渠(&amp;D)</value>
  </data>
  <data name="DropRecord" xml:space="preserve">
    <value>ドロップ記録(&amp;D)</value>
  </data>
  <data name="EquipEncyclopedia" xml:space="preserve">
    <value>装備図鑑(&amp;E)</value>
  </data>
  <data name="EquipmentList" xml:space="preserve">
    <value>装備一覧(&amp;Q)</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>ファイル(&amp;F)</value>
  </data>
  <data name="FleetList" xml:space="preserve">
    <value>艦隊一覧(&amp;O)</value>
  </data>
  <data name="Fleets" xml:space="preserve">
    <value>艦隊(&amp;F)</value>
  </data>
  <data name="Headquarters" xml:space="preserve">
    <value>司令部(&amp;H)</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>ヘルプ(&amp;H)</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>情報(&amp;I)</value>
  </data>
  <data name="Layout" xml:space="preserve">
    <value>レイアウト(&amp;L)</value>
  </data>
  <data name="LayoutOpen" xml:space="preserve">
    <value>別のファイルからロード(&amp;O)...</value>
  </data>
  <data name="BaseAirCorps" xml:space="preserve">
    <value>基地航空隊(&amp;S)</value>
  </data>
  <data name="Load" xml:space="preserve">
    <value>ロード(&amp;L)</value>
  </data>
  <data name="LoadAPIFromFile" xml:space="preserve">
    <value>ファイルからAPIをロード(&amp;L)...</value>
  </data>
  <data name="LoadAPIList" xml:space="preserve">
    <value>APIリストをロード(&amp;I)...</value>
  </data>
  <data name="LoadDataFromOld" xml:space="preserve">
    <value>旧 api_start2から深海棲艦を復元(&amp;A)...</value>
  </data>
  <data name="LoadOldAPIRecord" xml:space="preserve">
    <value>旧 api_start2 からレコードを構築(&amp;O)...</value>
  </data>
  <data name="Log" xml:space="preserve">
    <value>ログ(&amp;L)</value>
  </data>
  <data name="OnlineHelp" xml:space="preserve">
    <value>オンラインヘルプ(&amp;H)...</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>その他</value>
  </data>
  <data name="Other_Alignment" xml:space="preserve">
    <value>配置(&amp;A)</value>
  </data>
  <data name="Other_ApplyStyleSheet" xml:space="preserve">
    <value>スタイルシートを適用する</value>
  </data>
  <data name="Other_ClearCache" xml:space="preserve">
    <value>キャッシュのクリア(&amp;C)</value>
  </data>
  <data name="Other_Mute" xml:space="preserve">
    <value>ミュート(&amp;M)</value>
  </data>
  <data name="Other_Navigate" xml:space="preserve">
    <value>移動(&amp;N)...</value>
  </data>
  <data name="Other_NavigateToLogInPage" xml:space="preserve">
    <value>ログインページへ移動(&amp;L)</value>
  </data>
  <data name="Other_Refresh" xml:space="preserve">
    <value>更新(&amp;R)</value>
  </data>
  <data name="Other_RegionCookie" xml:space="preserve">
    <value>地域制限クッキーを設定</value>
  </data>
  <data name="Other_Screenshot" xml:space="preserve">
    <value>スクリーンショット(&amp;S)</value>
  </data>
  <data name="Other_Zoom" xml:space="preserve">
    <value>ズーム(&amp;Z)</value>
  </data>
  <data name="Other_Zoom_Current" xml:space="preserve">
    <value>現在%</value>
  </data>
  <data name="Other_Zoom_Fit" xml:space="preserve">
    <value>ぴったり</value>
  </data>
  <data name="Quest" xml:space="preserve">
    <value>任務(&amp;Q)</value>
  </data>
  <data name="ReattachAll" xml:space="preserve">
    <value>全て再検索して取り込む(&amp;S)</value>
  </data>
  <data name="Record" xml:space="preserve">
    <value>レコード(&amp;R)</value>
  </data>
  <data name="RenameShipResource" xml:space="preserve">
    <value>艦船リソースをリネーム(&amp;R)...</value>
  </data>
  <data name="ResourceChart" xml:space="preserve">
    <value>資源チャート(&amp;C)</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>セーブ(&amp;S)</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>設定(&amp;C)...</value>
  </data>
  <data name="ShipEncyclopedia" xml:space="preserve">
    <value>艦船図鑑(&amp;S)</value>
  </data>
  <data name="ShipGroup" xml:space="preserve">
    <value>艦船グループ(&amp;G)</value>
  </data>
  <data name="ShowShipName" xml:space="preserve">
    <value>艦名を表示(&amp;V)</value>
  </data>
  <data name="ShowToolMenu" xml:space="preserve">
    <value>ツールメニューを表示</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>試製七四式電子観測儀</value>
  </data>
  <data name="Tools" xml:space="preserve">
    <value>ツール(&amp;T)</value>
  </data>
  <data name="VersionInfo" xml:space="preserve">
    <value>バージョン情報(&amp;V)</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>表示(&amp;V)</value>
  </data>
  <data name="WindowCapture" xml:space="preserve">
    <value>ウィンドウキャプチャ(&amp;W)</value>
  </data>
  <data name="File_Layout_Change" xml:space="preserve">
    <value>別のファイルへ保存(&amp;C)...</value>
  </data>
  <data name="File_Layout_LockLayout" xml:space="preserve">
    <value>レイアウトのロック(&amp;T)</value>
  </data>
  <data name="File_Layout_TopMost" xml:space="preserve">
    <value>最前面に表示(&amp;M)</value>
  </data>
  <data name="Option" xml:space="preserve">
    <value>オプション(&amp;O)</value>
  </data>
  <data name="AntiAirDefense" xml:space="preserve">
    <value>対空砲火詳細(&amp;A)</value>
  </data>
</root>