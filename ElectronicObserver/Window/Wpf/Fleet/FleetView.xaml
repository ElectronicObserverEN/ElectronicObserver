<UserControl
	x:Class="ElectronicObserver.Window.Wpf.Fleet.FleetView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:common="clr-namespace:ElectronicObserver.Common"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:electronicObserverTypes="clr-namespace:ElectronicObserver.Core.Types;assembly=ElectronicObserver.Core"
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:translations="clr-namespace:ElectronicObserver.Translations"
	xmlns:viewModels="clr-namespace:ElectronicObserver.Window.Wpf.Fleet.ViewModels"
	xmlns:views="clr-namespace:ElectronicObserver.Window.Wpf.Fleet.Views"
	x:Name="FleetControl"
	d:DesignHeight="150"
	d:DesignWidth="200"
	TextElement.FontFamily="{Binding FontFamily, RelativeSource={RelativeSource AncestorType=Window}}"
	TextElement.FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType=Window}}"
	TextElement.Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Window}}"
	mc:Ignorable="d"
	>
	<UserControl.Resources>
		<ResourceDictionary>
			<Storyboard
				x:Key="TaihaStoryboard"
				RepeatBehavior="Forever"
				Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
				Duration="0:0:2"
				>
				<ColorAnimationUsingKeyFrames>
					<DiscreteColorKeyFrame KeyTime="0:0:0" Value="Transparent" />
				</ColorAnimationUsingKeyFrames>
				<ColorAnimationUsingKeyFrames>
					<DiscreteColorKeyFrame KeyTime="0:0:1" Value="Red" />
				</ColorAnimationUsingKeyFrames>
				<ColorAnimationUsingKeyFrames>
					<DiscreteColorKeyFrame KeyTime="0:0:2" Value="Transparent" />
				</ColorAnimationUsingKeyFrames>
			</Storyboard>

			<Style TargetType="Border">
				<Setter Property="Background" Value="Transparent" />
			</Style>

			<viewModels:FleetViewModelBindingProxy x:Key="Proxy" DataContext="{Binding}" />
		</ResourceDictionary>
	</UserControl.Resources>

	<Grid
		DataContext="{Binding ViewModel, ElementName=FleetControl}"
		IsSharedSizeScope="True"
		Visibility="{Binding Visibility}"
		>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition />
		</Grid.RowDefinitions>

		<Border Grid.Row="0">
			<Border.Style>
				<Style TargetType="Border">
					<Setter Property="Background" Value="Transparent" />
					<!--
					<Style.Triggers>
						<DataTrigger Binding="{Binding HasTaihaShip}" Value="True">
							<DataTrigger.EnterActions>
								<BeginStoryboard x:Name="TaihaStoryboard" Storyboard="{StaticResource Taiha}" />
							</DataTrigger.EnterActions>
						</DataTrigger>
						<DataTrigger Binding="{Binding HasTaihaShip}" Value="False">
							<DataTrigger.EnterActions>
								<StopStoryboard BeginStoryboardName="TaihaStoryboard" />
							</DataTrigger.EnterActions>
						</DataTrigger>
					</Style.Triggers>
					-->
				</Style>
			</Border.Style>
			<Border.ContextMenu>
				<ContextMenu>
					<MenuItem
						d:Header="Copy"
						Command="{Binding CopyCommand}"
						Header="{Binding FormFleet.ContextMenuFleet_CopyFleet}"
						/>
					<MenuItem
						d:Header="Copy (deck-builder)"
						Header="{Binding FormFleet.ContextMenuFleet_CopyFleetDeckBuilder}"
						ItemsSource="{Binding AirBaseAreas}"
						>
						<MenuItem.ItemContainerStyle>
							<Style BasedOn="{StaticResource DefaultMenuItemStyle}" TargetType="MenuItem">
								<Setter Property="Command" Value="{Binding DataContext.CopyDeckBuilderCommand, Source={StaticResource Proxy}}" />
								<Setter Property="CommandParameter" Value="{Binding AreaId}" />
								<Setter Property="Header" Value="{Binding Display}" />
							</Style>
						</MenuItem.ItemContainerStyle>
					</MenuItem>
					<MenuItem
						d:Header="Copy Ship List (kancolle-calc)"
						Command="{Binding CopyKanmusuListCommand}"
						Header="{Binding FormFleet.ContextMenuFleet_CopyKanmusuList}"
						/>
					<MenuItem d:Header="Copy Ship List (kancolle-fleetanalysis)" Header="{Binding FormFleet.ContextMenuFleet_CopyFleetAnalysisShips}">
						<MenuItem
							d:Header="All"
							Command="{Binding CopyFleetAnalysisAllShipsCommand}"
							Header="{Binding FormFleet.All}"
							/>
						<MenuItem
							d:Header="Locked"
							Command="{Binding CopyFleetAnalysisLockedShipsCommand}"
							Header="{Binding FormFleet.Locked}"
							/>
					</MenuItem>
					<MenuItem d:Header="Copy Equipment List (kancolle-fleetanalysis)" Header="{Binding FormFleet.ContextMenuFleet_CopyFleetAnalysisEquipment}">
						<MenuItem
							d:Header="All"
							Command="{Binding CopyFleetAnalysisAllEquipCommand}"
							Header="{Binding FormFleet.All}"
							/>
						<MenuItem
							d:Header="Locked"
							Command="{Binding CopyFleetAnalysisLockedEquipCommand}"
							Header="{Binding FormFleet.Locked}"
							/>
					</MenuItem>
					<Separator />
					<MenuItem Header="{Binding FormFleet.CopyToFleetAnalysisSpreadsheetShips}">
						<MenuItem Command="{Binding CopyFleetAnalysisAllShipsShortCommand}" Header="{Binding FormFleet.All}" />
						<MenuItem Command="{Binding CopyFleetAnalysisLockedShipsShortCommand}" Header="{Binding FormFleet.Locked}" />
					</MenuItem>
					<MenuItem Header="{Binding FormFleet.CopyToFleetAnalysisSpreadsheetEquipment}">
						<MenuItem Command="{Binding CopyFleetAnalysisAllEquipShortCommand}" Header="{Binding FormFleet.All}" />
						<MenuItem Command="{Binding CopyFleetAnalysisLockedEquipShortCommand}" Header="{Binding FormFleet.Locked}" />
					</MenuItem>
					<Separator />
					<MenuItem
						d:Header="AA Defense"
						Command="{Binding AntiAirDetailsCommand}"
						Header="{Binding FormFleet.ContextMenuFleet_AntiAirDetails}"
						/>
					<MenuItem d:Header="Copy as Image" Header="{Binding FormFleet.ContextMenuFleet_Capture}" />
					<MenuItem
						d:Header="Save as Image..."
						Command="{Binding OutputFleetImageCommand}"
						Header="{Binding FormFleet.ContextMenuFleet_OutputFleetImage}"
						/>
					<MenuItem
						d:Header="Air control simulator"
						Command="{Binding OpenAirControlSimulatorCommand}"
						Header="{Binding FormFleet.AirControlSimulator}"
						/>
					<MenuItem
						d:Header="Operation room"
						Command="{Binding OpenOperationRoomCommand}"
						Header="{Binding FormFleet.OperationRoom}"
						/>
				</ContextMenu>
			</Border.ContextMenu>
			<StackPanel
				DataContext="{Binding ControlFleet}"
				Grid.IsSharedSizeScope="True"
				Orientation="Horizontal"
				>
				<Border>
					<Border.ToolTip>
						<StackPanel>
							<StackPanel.Resources>
								<DataTemplate DataType="{x:Type electronicObserverTypes:SmokeGeneratorTriggerRate}">
									<StackPanel Orientation="Horizontal">
										<common:EquipmentIcon Type="SmokeGenerator" Visibility="{Binding SmokeGenerator1Active, Converter={StaticResource BooleanToVisibilityConverter}}" />
										<common:EquipmentIcon Type="SmokeGenerator" Visibility="{Binding SmokeGenerator2Active, Converter={StaticResource BooleanToVisibilityConverter}}" />
										<common:EquipmentIcon Type="SmokeGenerator" Visibility="{Binding SmokeGenerator3Active, Converter={StaticResource BooleanToVisibilityConverter}}" />
									</StackPanel>
								</DataTemplate>

								<DataTemplate DataType="{x:Type viewModels:TotalRate}">
									<Grid HorizontalAlignment="Left">
										<Grid.ColumnDefinitions>
											<ColumnDefinition SharedSizeGroup="ItemMarker" />
											<ColumnDefinition SharedSizeGroup="Rate" />
											<ColumnDefinition SharedSizeGroup="Equipment" />
										</Grid.ColumnDefinitions>

										<!--  KATAKANA MIDDLE DOT  -->
										<TextBlock Grid.Column="0" Text="&#x30FB;" />
										<TextBlock Grid.Column="1" Margin="4 0">
											<Run Text="[" /><Run Text="{Binding Rate, StringFormat={}{0:P1}, Mode=OneWay}" /><Run Text="]" />
										</TextBlock>
										<ContentControl Grid.Column="2" Content="{Binding Equipment}" />
									</Grid>
								</DataTemplate>
							</StackPanel.Resources>

							<TextBlock Text="{Binding Name.ToolTip}" />

							<TextBlock>
								<Run Text="{x:Static translations:FleetResources.NightRecon}" />
								<Run Text=":" />
							</TextBlock>
							<ItemsControl ItemsSource="{Binding NightRecons}" />

							<TextBlock>
								<Run Text="{x:Static translations:FleetResources.Flare}" />
								<Run Text=":" />
							</TextBlock>
							<ItemsControl ItemsSource="{Binding Flares}" />

							<StackPanel>
								<StackPanel.Style>
									<Style TargetType="StackPanel">
										<Setter Property="Visibility" Value="Visible" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding SmokeGeneratorRates.Count}" Value="0">
												<Setter Property="Visibility" Value="Collapsed" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</StackPanel.Style>

								<TextBlock>
									<Run Text="{Binding FormFleet.SmokeScreen, Mode=OneWay}" />
									<Run Text=":" />
								</TextBlock>
								<ItemsControl ItemsSource="{Binding SmokeGeneratorRates}" />
							</StackPanel>
						</StackPanel>
					</Border.ToolTip>

					<TextBlock Margin="4 2" Text="{Binding Name.Text}" />
				</Border>

				<views:FleetStateView ViewModel="{Binding State}" />
				<!--
				<StackPanel Margin="4 2" Orientation="Horizontal" DataContext="{Binding State}">
					
				</StackPanel>
				-->

				<Border DataContext="{Binding AirSuperiority}" ToolTip="{Binding ToolTip}">
					<StackPanel Margin="4 2" Orientation="Horizontal">
						<common:EquipmentIcon Margin="2 0" Type="CarrierBasedFighter" />
						<TextBlock Text="{Binding Text}" />
					</StackPanel>
				</Border>

				<Border
					Background="Transparent"
					DataContext="{Binding SearchingAbility}"
					ToolTip="{Binding ToolTip}"
					>
					<Border.InputBindings>
						<MouseBinding Command="{Binding ViewModel.ControlFleet.IncreaseBranchWeightCommand, ElementName=FleetControl}" MouseAction="LeftClick" />
					</Border.InputBindings>
					<StackPanel Margin="4 2" Orientation="Horizontal">
						<common:EquipmentIcon Margin="2 0" Type="CarrierBasedRecon" />
						<TextBlock Text="{Binding Text}" />
					</StackPanel>
				</Border>

				<Border DataContext="{Binding AntiAirPower}" ToolTip="{Binding ToolTip}">
					<StackPanel Margin="4 2" Orientation="Horizontal">
						<common:EquipmentIcon Margin="2 0" Type="HighAngleGun" />
						<TextBlock Text="{Binding Text}" />
					</StackPanel>
				</Border>

				<Border DataContext="{Binding Speed}" ToolTip="{Binding ToolTip}">
					<StackPanel Margin="4 2" Orientation="Horizontal">
						<common:ParameterIcon Margin="2 0" Type="Speed" />
						<TextBlock Text="{Binding Text}" />
					</StackPanel>
				</Border>
			</StackPanel>
		</Border>

		<ScrollViewer
			Grid.Row="1"
			HorizontalScrollBarVisibility="Auto"
			VerticalScrollBarVisibility="Auto"
			>
			<ItemsControl ItemsSource="{Binding ControlMember}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Vertical" />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>

				<ItemsControl.ItemTemplate>
					<DataTemplate DataType="viewModels:FleetItemViewModel">
						<Border Visibility="{Binding Visibility}">
							<Border.Style>
								<Style TargetType="Border">
									<Setter Property="Background" Value="Transparent" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding ShowSinkWarning}" Value="True">
											<DataTrigger.EnterActions>
												<BeginStoryboard x:Name="BeginTaihaStoryboard" Storyboard="{StaticResource TaihaStoryboard}" />
											</DataTrigger.EnterActions>
										</DataTrigger>
										<DataTrigger Binding="{Binding ShowSinkWarning}" Value="False">
											<DataTrigger.EnterActions>
												<StopStoryboard BeginStoryboardName="BeginTaihaStoryboard" />
											</DataTrigger.EnterActions>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Border.Style>

							<Border.Resources>
								<Style TargetType="Border">
									<Setter Property="Margin" Value="2 0" />
									<Setter Property="Background" Value="Transparent" />
								</Style>
							</Border.Resources>
							<StackPanel>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="Auto"
											MaxWidth="{Binding Name.MaxWidth}"
											SharedSizeGroup="ShipName"
											/>
										<ColumnDefinition Width="Auto" SharedSizeGroup="ShipLevel" />
										<ColumnDefinition Width="Auto" SharedSizeGroup="ShipHealth" />
										<ColumnDefinition Width="Auto" SharedSizeGroup="ShipCondition" />
										<ColumnDefinition Width="Auto" SharedSizeGroup="ShipResources" />
										<ColumnDefinition Width="Auto" SharedSizeGroup="ShipEquipment" />
									</Grid.ColumnDefinitions>

									<Border Grid.Column="0">
										<Border.ToolTip>
											<StackPanel>
												<TextBlock Text="{Binding ShipName}" />

												<views:ToolTipStat
													Base="{Binding Ship.FirepowerBase}"
													Bonus="{Binding Ship.SpecialEffectItemFirepower}"
													Icon="{StaticResource Parameter.Firepower}"
													ParameterName="{Binding FormFleet.Firepower}"
													Total="{Binding Ship.FirepowerTotal}"
													/>

												<views:ToolTipStat
													Base="{Binding Ship.TorpedoBase}"
													Bonus="{Binding Ship.SpecialEffectItemTorpedo}"
													Icon="{StaticResource Parameter.Torpedo}"
													ParameterName="{Binding FormFleet.Torpedo}"
													Total="{Binding Ship.TorpedoTotal}"
													/>

												<views:ToolTipStat
													Base="{Binding Ship.AABase}"
													Icon="{StaticResource Parameter.AntiAir}"
													ParameterName="{Binding FormFleet.AA}"
													Total="{Binding Ship.AATotal}"
													/>

												<views:ToolTipStat
													Base="{Binding Ship.ArmorBase}"
													Bonus="{Binding Ship.SpecialEffectItemArmor}"
													Icon="{StaticResource Parameter.Armor}"
													ParameterName="{Binding FormFleet.Armor}"
													Total="{Binding Ship.ArmorTotal}"
													/>

												<views:ToolTipStat
													Base="{Binding Ship.ASWBase}"
													Icon="{StaticResource Parameter.AntiSubmarine}"
													ParameterName="{Binding FormFleet.ASW}"
													Total="{Binding Ship.ASWTotal}"
													/>

												<views:ToolTipStat
													Base="{Binding Ship.EvasionBase}"
													Bonus="{Binding Ship.SpecialEffectItemEvasion}"
													Icon="{StaticResource Parameter.Evasion}"
													ParameterName="{Binding FormFleet.Evasion}"
													Total="{Binding Ship.EvasionTotal}"
													/>

												<views:ToolTipStat
													Base="{Binding Ship.LOSBase}"
													Icon="{StaticResource Parameter.Los}"
													ParameterName="{Binding FormFleet.LOS}"
													Total="{Binding Ship.LOSTotal}"
													/>

												<views:ToolTipStat
													Base="{Binding Ship.LuckTotal}"
													Icon="{StaticResource Parameter.Luck}"
													ParameterName="{Binding FormFleet.Luck}"
													/>

												<views:ToolTipStat
													Base="{Binding EquipmentAccuracy}"
													Icon="{StaticResource Parameter.Accuracy}"
													ParameterName="{Binding FormFleet.Accuracy}"
													/>

												<views:ToolTipStat
													Base="{Binding EquipmentBomber}"
													Icon="{StaticResource Parameter.Bomber}"
													ParameterName="{Binding FormFleet.Bombing}"
													/>

												<views:ToolTipStat
													Base="{Binding Ship.Range, Converter={StaticResource RangeConverter}}"
													Icon="{StaticResource Parameter.Range}"
													ParameterName="{Binding FormFleet.Range}"
													/>

												<views:ToolTipStat
													Base="{Binding Ship.Speed, Converter={StaticResource SpeedConverter}}"
													Icon="{StaticResource Parameter.Speed}"
													ParameterName="{Binding FormFleet.Speed}"
													/>

												<TextBlock Text="{Binding FormFleet.RightClickToOpenEncyclopedia}" />
											</StackPanel>
										</Border.ToolTip>
										<Border.InputBindings>
											<MouseBinding Command="{Binding Name.OpenShipEncyclopediaCommand}" MouseAction="RightClick" />
										</Border.InputBindings>
										<StackPanel Background="{Binding Name.Background}">
											<TextBlock
												Margin="2"
												Foreground="{Binding Name.Foreground}"
												Text="{Binding Name.Text}"
												/>
										</StackPanel>
									</Border>

									<Border
										Grid.Column="1"
										Background="{Binding Background}"
										Cursor="Help"
										DataContext="{Binding Level}"
										ForceCursor="True"
										ToolTip="{Binding ToolTip}"
										>
										<Border.ContextMenu>
											<ContextMenu>
												<MenuItem Command="{Binding OpenExpCheckerCommand}" Header="{Binding DataContext.FormFleet.ContextMenuFleetShipLevel_OpenExpChecker, Source={StaticResource Proxy}}" />

												<Separator />

												<MenuItem Command="{Binding CreateTrainingPlanCommand}" Header="{Binding DataContext.FormFleet.ContextMenuFleetShipLevel_CreateTrainingPlan, Source={StaticResource Proxy}}">
													<MenuItem.Style>
														<Style BasedOn="{StaticResource DefaultMenuItemStyle}" TargetType="{x:Type MenuItem}">
															<Setter Property="Visibility" Value="Collapsed" />
															<Style.Triggers>
																<DataTrigger Binding="{Binding CanAddPlan}" Value="True">
																	<Setter Property="Visibility" Value="Visible" />
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</MenuItem.Style>
												</MenuItem>

												<MenuItem
													Command="{Binding ShipTrainingPlanViewerViewModel.OpenEditPopupCommand}"
													CommandParameter="{Binding FirstTrainingPlan}"
													Header="{Binding DataContext.FormFleet.ContextMenuFleetShipLevel_EditTrainingPlan, Source={StaticResource Proxy}}"
													>
													<MenuItem.Style>
														<Style BasedOn="{StaticResource DefaultMenuItemStyle}" TargetType="{x:Type MenuItem}">
															<Setter Property="Visibility" Value="Collapsed" />
															<Style.Triggers>
																<DataTrigger Binding="{Binding CanEditOrRemovePlan}" Value="True">
																	<Setter Property="Visibility" Value="Visible" />
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</MenuItem.Style>
												</MenuItem>

												<MenuItem
													Command="{Binding ShipTrainingPlanViewerViewModel.RemovePlanCommand}"
													CommandParameter="{Binding FirstTrainingPlan}"
													Header="{Binding DataContext.FormFleet.ContextMenuFleetShipLevel_RemoveTrainingPlan, Source={StaticResource Proxy}}"
													>

													<MenuItem.Style>
														<Style BasedOn="{StaticResource DefaultMenuItemStyle}" TargetType="{x:Type MenuItem}">
															<Setter Property="Visibility" Value="Collapsed" />
															<Style.Triggers>
																<DataTrigger Binding="{Binding CanEditOrRemovePlan}" Value="True">
																	<Setter Property="Visibility" Value="Visible" />
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</MenuItem.Style>
												</MenuItem>
											</ContextMenu>
										</Border.ContextMenu>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto" SharedSizeGroup="ShipLevelText" />
												<ColumnDefinition Width="Auto" SharedSizeGroup="ShipLevelValue" />
												<ColumnDefinition Width="Auto" SharedSizeGroup="ShipLevelNext" />
											</Grid.ColumnDefinitions>

											<TextBlock
												Grid.Column="0"
												Margin="2"
												VerticalAlignment="Bottom"
												FontFamily="{Binding SubFontFamily}"
												FontSize="{Binding SubFontSize}"
												Foreground="{Binding SubForeground}"
												Text="Lv."
												/>
											<TextBlock
												Grid.Column="1"
												Margin="0 2 2 2"
												VerticalAlignment="Bottom"
												Foreground="{Binding Foreground}"
												Text="{Binding Value}"
												TextAlignment="Right"
												/>
											<StackPanel
												Grid.Column="2"
												Margin="2 0"
												Visibility="{Binding NextVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
												>
												<StackPanel.Resources>
													<Style TargetType="TextBlock">
														<Setter Property="FontFamily" Value="{Binding SubFontFamily}" />
														<Setter Property="FontSize" Value="{Binding SubFontSize}" />
														<Setter Property="Margin" Value="0 -2" />
													</Style>
												</StackPanel.Resources>
												<TextBlock
													FontFamily="{Binding SubFontFamily}"
													FontSize="{Binding SubFontSize}"
													Foreground="{Binding SubForeground}"
													Text="{Binding TextNext}"
													/>
												<TextBlock
													FontFamily="{Binding SubFontFamily}"
													FontSize="{Binding SubFontSize}"
													Foreground="{Binding SubForeground}"
													Text="{Binding ValueNext}"
													/>
											</StackPanel>
										</Grid>
									</Border>

									<Border
										Grid.Column="2"
										Background="{Binding Background}"
										DataContext="{Binding HP}"
										ToolTip="{Binding ToolTip}"
										>
										<i:Interaction.Triggers>
											<i:EventTrigger EventName="MouseEnter">
												<i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
											</i:EventTrigger>
											<i:EventTrigger EventName="MouseLeave">
												<i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
											</i:EventTrigger>
										</i:Interaction.Triggers>
										<Grid>
											<Grid.RowDefinitions>
												<RowDefinition Height="*" />
												<RowDefinition Height="Auto" />
											</Grid.RowDefinitions>

											<TextBlock
												x:Name="HealthText"
												Grid.Row="0"
												Padding="5 0"
												HorizontalAlignment="Stretch"
												Foreground="{Binding Foreground}"
												Text="{Binding DisplayText}"
												TextAlignment="Center"
												/>
											<!--  margin -2 is to prevent progress bar from expanding endlessly  -->
											<ProgressBar
												Grid.Row="1"
												MaxWidth="{Binding ActualWidth, ElementName=HealthText}"
												Margin="-2 0"
												DataContext="{Binding AkashiRepairBar}"
												Foreground="{Binding Foreground}"
												Maximum="{Binding MaximumValue}"
												Visibility="{Binding Visibility}"
												Value="{Binding Value}"
												/>
											<ProgressBar
												Grid.Row="1"
												MaxWidth="{Binding ActualWidth, ElementName=HealthText}"
												Margin="-2 0"
												DataContext="{Binding HPBar}"
												Foreground="{Binding Foreground}"
												Maximum="{Binding MaximumValue}"
												Value="{Binding Value}"
												/>
										</Grid>
									</Border>

									<Border
										Grid.Column="3"
										DataContext="{Binding Condition}"
										ToolTip="{Binding ToolTip}"
										>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition />
												<ColumnDefinition />
											</Grid.ColumnDefinitions>

											<common:IconContentIcon Grid.Column="0" Type="{Binding Icon}" />
											<TextBlock
												Grid.Column="1"
												Padding="2"
												Background="{Binding Background}"
												Foreground="{Binding Foreground}"
												Text="{Binding Text}"
												TextAlignment="Right"
												/>
										</Grid>
									</Border>

									<Border
										Grid.Column="4"
										DataContext="{Binding ShipResource}"
										ToolTip="{Binding ToolTip}"
										>
										<StackPanel Width="32" VerticalAlignment="Center">
											<ProgressBar
												Margin="0 2"
												Background="{Binding Background}"
												DataContext="{Binding BarFuel}"
												Foreground="{Binding Foreground}"
												Maximum="{Binding MaximumValue}"
												Value="{Binding Value}"
												/>
											<ProgressBar
												Margin="0 2"
												Background="{Binding Background}"
												DataContext="{Binding BarAmmo}"
												Foreground="{Binding Foreground}"
												Maximum="{Binding MaximumValue}"
												Value="{Binding Value}"
												/>
										</StackPanel>
									</Border>

									<Border
										x:Name="ShipEquipmentControl"
										Grid.Column="5"
										DataContext="{Binding Equipments}"
										ToolTip="{Binding ToolTip}"
										>
										<ItemsControl ItemsSource="{Binding Slots}">
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<StackPanel Orientation="Horizontal" />
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
											<ItemsControl.ItemTemplate>
												<DataTemplate DataType="viewModels:ShipSlotViewModel">
													<views:ShipSlotView ViewModel="{Binding}" />
												</DataTemplate>
											</ItemsControl.ItemTemplate>
										</ItemsControl>
									</Border>
								</Grid>
								<Separator Margin="0 1 0 0" />
							</StackPanel>
						</Border>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</ScrollViewer>
	</Grid>
</UserControl>
